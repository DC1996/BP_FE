{"remainingRequest":"/home/dc/Documents/BP/vue-bp-web/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/dc/Documents/BP/vue-bp-web/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/dc/Documents/BP/vue-bp-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dc/Documents/BP/vue-bp-web/src/components/createtaskpage.vue?vue&type=template&id=3a233ca0&","dependencies":[{"path":"/home/dc/Documents/BP/vue-bp-web/src/components/createtaskpage.vue","mtime":1649228006582},{"path":"/home/dc/Documents/BP/vue-bp-web/node_modules/cache-loader/dist/cjs.js","mtime":1642114936856},{"path":"/home/dc/Documents/BP/vue-bp-web/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1642114939268},{"path":"/home/dc/Documents/BP/vue-bp-web/node_modules/cache-loader/dist/cjs.js","mtime":1642114936856},{"path":"/home/dc/Documents/BP/vue-bp-web/node_modules/vue-loader/lib/index.js","mtime":1642114938760},{"path":"/home/dc/Documents/BP/vue-bp-web/node_modules/cache-loader/dist/cjs.js","mtime":1642114936856},{"path":"/home/dc/Documents/BP/vue-bp-web/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1642114939268},{"path":"/home/dc/Documents/BP/vue-bp-web/node_modules/cache-loader/dist/cjs.js","mtime":1642114936856},{"path":"/home/dc/Documents/BP/vue-bp-web/node_modules/vue-loader/lib/index.js","mtime":1642114938760}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}