{"remainingRequest":"/home/dc/Documents/BP/vue-bp-web/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/dc/Documents/BP/vue-bp-web/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/dc/Documents/BP/vue-bp-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dc/Documents/BP/vue-bp-web/src/components/homepage.vue?vue&type=template&id=fa4e1604&","dependencies":[{"path":"/home/dc/Documents/BP/vue-bp-web/src/components/homepage.vue","mtime":1644162920841},{"path":"/home/dc/Documents/BP/vue-bp-web/node_modules/cache-loader/dist/cjs.js","mtime":1642114936856},{"path":"/home/dc/Documents/BP/vue-bp-web/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1642114939268},{"path":"/home/dc/Documents/BP/vue-bp-web/node_modules/cache-loader/dist/cjs.js","mtime":1642114936856},{"path":"/home/dc/Documents/BP/vue-bp-web/node_modules/vue-loader/lib/index.js","mtime":1642114938760}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uICgpIHsKICB2YXIgX3ZtID0gdGhpcwogIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogIHJldHVybiBfYygKICAgICJ2LWNvbnRhaW5lciIsCiAgICB7IHN0YXRpY0NsYXNzOiAiZC1mbGV4IGZsZXgtcm93IGp1c3RpZnktY2VudGVyIGFsaWduLXN0YXJ0IG10LTEwIiB9LAogICAgWwogICAgICBfYygKICAgICAgICAidi1jYXJkIiwKICAgICAgICB7CiAgICAgICAgICBzdGF0aWNDbGFzczogImp1c3RpZnktY2VudGVyIGFsaWduLXN0YXJ0IHB4LTggcHktNCBteC04IG15LTIiLAogICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgY29sb3I6ICJ2YXIoLS1ncmVlbi1iYWNrZ3JvdW5kLWNvbG9yKSIsCiAgICAgICAgICAgICJtaW4td2lkdGgiOiAiNDAwIiwKICAgICAgICAgICAgIm1heC13aWR0aCI6ICI0MDAiLAogICAgICAgICAgICAibWluLWhlaWdodCI6ICI0ODAiLAogICAgICAgICAgICAibWF4LWhlaWdodCI6ICI0ODAiLAogICAgICAgICAgICBlbGV2YXRpb246IDUsCiAgICAgICAgICB9LAogICAgICAgIH0sCiAgICAgICAgWwogICAgICAgICAgX2MoCiAgICAgICAgICAgICJ2LWNhcmQtdGl0bGUiLAogICAgICAgICAgICB7IHN0YXRpY0NsYXNzOiAidC10LWNvbG9yIGJvbGQgZm9udC13ZWlnaHQtbWVkaXVtIHRleHQtaDUiIH0sCiAgICAgICAgICAgIFtfdm0uX3YoIkNyZWF0ZSB0YXNrIildCiAgICAgICAgICApLAogICAgICAgICAgX2MoCiAgICAgICAgICAgICJ2LWNhcmQtdGV4dCIsCiAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJkLXQtY29sb3IgZm9udC13ZWlnaHQtbm9ybWFsIHRleHQtYm9keS0xIiB9LAogICAgICAgICAgICBbX3ZtLl92KCIgWW91IGNhbiBjcmVhdGUgeW91ciBvd24gdGFzayBpbiBhIGZldyBzaW1wbGUgc3RlcHMuICIpXQogICAgICAgICAgKSwKICAgICAgICAgIF9jKCJ2LWltZyIsIHsKICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJzaHJpbmsgbXgtYXV0byBteS0wIHB5LTAiLAogICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgIGFsdDogIk1hbiBzaXR0aW5nLCByZWFkaW5nIGEgbWF0aCBib29rLCBwaSBzeW1ib2wiLAogICAgICAgICAgICAgIGNvbnRhaW46ICIiLAogICAgICAgICAgICAgIHRyYW5zaXRpb246ICJzY2FsZS10cmFuc2l0aW9uIiwKICAgICAgICAgICAgICBzcmM6IHJlcXVpcmUoIi4uL2Fzc2V0cy91bmRyYXdfY3JlYXRlX3Rhc2suc3ZnIiksCiAgICAgICAgICAgICAgIm1heC1oZWlnaHQiOiAiMjIwIiwKICAgICAgICAgICAgfSwKICAgICAgICAgIH0pLAogICAgICAgICAgX2MoCiAgICAgICAgICAgICJ2LWNhcmQtYWN0aW9ucyIsCiAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJkLWZsZXggZmxleC1yb3cganVzdGlmeS1zcGFjZS1hcm91bmQgbXQtNiIgfSwKICAgICAgICAgICAgWwogICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgInYtYnRuIiwKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6CiAgICAgICAgICAgICAgICAgICAgInB4LTggcHktMiBtYS0wIG5vLXVwcGVyY2FzZSB0LXQtY29sb3IgYnV0dG9uLWJvcmRlciIsCiAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgdG86ICIveW91clRhc2tzIiwKICAgICAgICAgICAgICAgICAgICBlbGV2YXRpb246ICI0IiwKICAgICAgICAgICAgICAgICAgICBsYXJnZTogIiIsCiAgICAgICAgICAgICAgICAgICAgcm91bmRlZDogIiIsCiAgICAgICAgICAgICAgICAgICAgY29sb3I6ICJ2YXIoLS1idXR0b24tc2Vjb25kLWNvbG9yKSIsCiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgW192bS5fdigiIEFsbCB0YXNrcyAiKV0KICAgICAgICAgICAgICApLAogICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgInYtYnRuIiwKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6CiAgICAgICAgICAgICAgICAgICAgInB4LTggcHktMiBtYS0wIG5vLXVwcGVyY2FzZSB0LXQtY29sb3IgYnV0dG9uLWJvcmRlciIsCiAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgZWxldmF0aW9uOiAiNCIsCiAgICAgICAgICAgICAgICAgICAgbGFyZ2U6ICIiLAogICAgICAgICAgICAgICAgICAgIHJvdW5kZWQ6ICIiLAogICAgICAgICAgICAgICAgICAgIGNvbG9yOiAidmFyKC0tYnV0dG9uLWNvbG9yKSIsCiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uICgkZXZlbnQpIHsKICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfdm0ubW92ZVRvQ3JlYXRlVGFzaygpCiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICBbX3ZtLl92KCIgQ3JlYXRlIHRhc2sgIildCiAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgXSwKICAgICAgICAgICAgMQogICAgICAgICAgKSwKICAgICAgICBdLAogICAgICAgIDEKICAgICAgKSwKICAgICAgX2MoCiAgICAgICAgInYtY2FyZCIsCiAgICAgICAgewogICAgICAgICAgc3RhdGljQ2xhc3M6ICJqdXN0aWZ5LWNlbnRlciBhbGlnbi0gcHgtOCBweS00IG14LTggbXktMiIsCiAgICAgICAgICBhdHRyczogewogICAgICAgICAgICBjb2xvcjogInZhcigtLWdyZWVuLWJhY2tncm91bmQtY29sb3IpIiwKICAgICAgICAgICAgIm1pbi13aWR0aCI6ICI0MDAiLAogICAgICAgICAgICAibWF4LXdpZHRoIjogIjQwMCIsCiAgICAgICAgICAgICJtaW4taGVpZ2h0IjogIjQ4MCIsCiAgICAgICAgICAgICJtYXgtaGVpZ2h0IjogIjQ4MCIsCiAgICAgICAgICAgIGVsZXZhdGlvbjogNSwKICAgICAgICAgIH0sCiAgICAgICAgfSwKICAgICAgICBbCiAgICAgICAgICBfYygKICAgICAgICAgICAgInYtY2FyZC10aXRsZSIsCiAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJ0LXQtY29sb3IgYm9sZCBmb250LXdlaWdodC1tZWRpdW0gdGV4dC1oNSIgfSwKICAgICAgICAgICAgW192bS5fdigiQ3JlYXRlIHRlc3QiKV0KICAgICAgICAgICksCiAgICAgICAgICBfYygKICAgICAgICAgICAgInYtY2FyZC10ZXh0IiwKICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogImQtdC1jb2xvciBmb250LXdlaWdodC1ub3JtYWwgdGV4dC1ib2R5LTEiIH0sCiAgICAgICAgICAgIFtfdm0uX3YoIiBZb3UgY2FuIGNyZWF0ZSB5b3VyIG93biB0ZXN0IGZyb20gZXhpc3RpbmcgdGFza3MuICIpXQogICAgICAgICAgKSwKICAgICAgICAgIF9jKCJ2LWltZyIsIHsKICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJzaHJpbmsgbXgtYXV0byBtdC05IHB0LTEiLAogICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgIGFsdDogIkZvcm1zLCBxdWVzdGlvbiBtYXJrcywgY3V0ZSBjaGFyYWN0ZXIiLAogICAgICAgICAgICAgIGNvbnRhaW46ICIiLAogICAgICAgICAgICAgIHNyYzogcmVxdWlyZSgiLi4vYXNzZXRzL3VuZHJhd19jcmVhdGVfdGVzdC5zdmciKSwKICAgICAgICAgICAgICAibWF4LWhlaWdodCI6ICIyNDAiLAogICAgICAgICAgICAgIHRyYW5zaXRpb246ICJzY2FsZS10cmFuc2l0aW9uIiwKICAgICAgICAgICAgfSwKICAgICAgICAgIH0pLAogICAgICAgICAgX2MoCiAgICAgICAgICAgICJ2LWNhcmQtYWN0aW9ucyIsCiAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJkLWZsZXggZmxleC1yb3cganVzdGlmeS1zcGFjZS1hcm91bmQgbXQtNiIgfSwKICAgICAgICAgICAgWwogICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgInYtYnRuIiwKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6CiAgICAgICAgICAgICAgICAgICAgInB4LTggcHktMiBtYS0wIG5vLXVwcGVyY2FzZSB0LXQtY29sb3IgYnV0dG9uLWJvcmRlciIsCiAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgZWxldmF0aW9uOiAiNCIsCiAgICAgICAgICAgICAgICAgICAgbGFyZ2U6ICIiLAogICAgICAgICAgICAgICAgICAgIHJvdW5kZWQ6ICIiLAogICAgICAgICAgICAgICAgICAgIGNvbG9yOiAidmFyKC0tYnV0dG9uLXNlY29uZC1jb2xvcikiLAogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIFtfdm0uX3YoIiBBbGwgdGVzdHMgIildCiAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICJ2LWJ0biIsCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOgogICAgICAgICAgICAgICAgICAgICJweC04IHB5LTIgbWEtMCBuby11cHBlcmNhc2UgdC10LWNvbG9yIGJ1dHRvbi1ib3JkZXIiLAogICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgIGVsZXZhdGlvbjogIjQiLAogICAgICAgICAgICAgICAgICAgIGxhcmdlOiAiIiwKICAgICAgICAgICAgICAgICAgICByb3VuZGVkOiAiIiwKICAgICAgICAgICAgICAgICAgICBjb2xvcjogInZhcigtLWJ1dHRvbi1jb2xvcikiLAogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIFtfdm0uX3YoIiBDcmVhdGUgdGVzdCAiKV0KICAgICAgICAgICAgICApLAogICAgICAgICAgICBdLAogICAgICAgICAgICAxCiAgICAgICAgICApLAogICAgICAgIF0sCiAgICAgICAgMQogICAgICApLAogICAgXSwKICAgIDEKICApCn0KdmFyIHN0YXRpY1JlbmRlckZucyA9IFtdCnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZQoKZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfQ=="}]}