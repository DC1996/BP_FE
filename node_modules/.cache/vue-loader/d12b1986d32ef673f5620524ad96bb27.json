{"remainingRequest":"/home/dc/Documents/BP/vue-bp-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dc/Documents/BP/vue-bp-web/src/components/createtaskpage.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dc/Documents/BP/vue-bp-web/src/components/createtaskpage.vue","mtime":1643498407065},{"path":"/home/dc/Documents/BP/vue-bp-web/node_modules/cache-loader/dist/cjs.js","mtime":1642114936856},{"path":"/home/dc/Documents/BP/vue-bp-web/node_modules/thread-loader/dist/cjs.js","mtime":1642114936856},{"path":"/home/dc/Documents/BP/vue-bp-web/node_modules/babel-loader/lib/index.js","mtime":1642114938312},{"path":"/home/dc/Documents/BP/vue-bp-web/node_modules/cache-loader/dist/cjs.js","mtime":1642114936856},{"path":"/home/dc/Documents/BP/vue-bp-web/node_modules/vue-loader/lib/index.js","mtime":1642114938760}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IHRva2VuaXplIH0gZnJvbSAiLi4vbXlmaWxlcy90b2tlbml6ZXIiCmltcG9ydCB7IHBhcnNlTWF0aE1hcmt1cCwgdGFza1F1ZXN0aW9uLCB2YXJpYWJsZUluZm8gfSBmcm9tICIuLi9teWZpbGVzL3Rhc2tIYW5kbGVyIgppbXBvcnQgeyByYW5kb21JbnQsIGV2YWx1YXRlIH0gZnJvbSAibWF0aGpzIjsKCmV4cG9ydCBkZWZhdWx0IHsKICAgIGRhdGEoKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgdGV4dDogIiIsCiAgICAgICAgICAgIHRhc2tfdGV4dDogIiIsCiAgICAgICAgICAgIHZhcmlhYmxlczogW10sCiAgICAgICAgICAgIHF1ZXN0aW9uczogW10sCiAgICAgICAgICAgIGFuc3dlcnM6IFtdLAoKICAgICAgICAgICAgb3ZlcmxheVY6IGZhbHNlLAogICAgICAgICAgICBvdmVybGF5QTogZmFsc2UsCiAgICAgICAgICAgIHRhc2tPdmVybGF5OiBmYWxzZSwKICAgICAgICAgICAgaW5kZXhWOiAwLAogICAgICAgICAgICBpbmRleEE6IDAsCiAgICAgICAgfTsKICAgIH0sCiAgICBjb21wdXRlZDogewogICAgICAgIGdldFRleHQoKSB7IHJldHVybiB0aGlzLnRleHQ7IH0KICAgIH0sCgogICAgY3JlYXRlZCgpIHsKICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignYmVmb3JldW5sb2FkJywgZnVuY3Rpb24oZXZlbnQpIHsKICAgICAgICAgICAgZXZlbnQucmV0dXJuVmFsdWUgPSAnV3JpdGUgc29tZXRoaW5nJwogICAgICAgICAgICBhbGVydCgid2FpdCIpCiAgICAgICAgfSkKICAgIH0sCgogICAgbWV0aG9kczogewogICAgICAgIHZhcmlhYmxlSW5mbyA6IGZ1bmN0aW9uKGkpIHsKICAgICAgICAgICAgdGhpcy5pbmRleFYgPSBpCiAgICAgICAgICAgIHRoaXMub3ZlcmxheVYgPSB0cnVlCiAgICAgICAgfSwKICAgICAgICBhbnN3ZXJJbmZvOiBmdW5jdGlvbihpKSB7CiAgICAgICAgICAgIHRoaXMuaW5kZXhBID0gaQogICAgICAgICAgICB0aGlzLm92ZXJsYXlBID0gdHJ1ZQogICAgICAgIH0sCiAgICAgICAgcHJldmlld1Rhc2sgOiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIHRoaXMudGFza092ZXJsYXkgPSB0cnVlCgogICAgICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnZGF0YScsIHRoaXMudGV4dCkKICAgICAgICB9LAogICAgICAgIHNhdmVUZXh0OiBmdW5jdGlvbigpIHsKICAgICAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ2RhdGEnLCB0aGlzLnRleHQpCiAgICAgICAgfSwKICAgICAgICByZXN0b3JlVGV4dDogZnVuY3Rpb24oKSB7CiAgICAgICAgICAgIHRoaXMudGV4dCA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdkYXRhJykKICAgICAgICB9LAogICAgICAgIHBhcnNlVGV4dCA6IGZ1bmN0aW9uICgpIHsKCiAgICAgICAgICAgIC8vIFRva2VuaXplCiAgICAgICAgICAgIGNvbnNvbGUubG9nKCB0b2tlbml6ZSggdGhpcy50ZXh0ICkgKQoKICAgICAgICAgICAgLy8gcGFyc2UgdGV4dAogICAgICAgICAgICB2YXIgcGFyc2VkRGF0YSA9IHBhcnNlTWF0aE1hcmt1cCggdGhpcy50ZXh0ICkKCiAgICAgICAgICAgIC8vIHByaW50IG91dCB0aGUgdG9rZW5pemVkIHN0cmluZyBmcm9tIHRoZSB0ZXh0YXJlYQogICAgICAgICAgICBjb25zb2xlLmxvZyggcGFyc2VkRGF0YSApOwoKICAgICAgICAgICAgLy8gY2xlYXIgYXJyYXlzCiAgICAgICAgICAgIHRoaXMudmFyaWFibGVzID0gW10KICAgICAgICAgICAgdGhpcy5xdWVzdGlvbnMgPSBbXQogICAgICAgICAgICB0aGlzLmFuc3dlcnMgPSBbXQogICAgICAgICAgICB0aGlzLnRhc2tfdGV4dCA9ICIiCgogICAgICAgICAgICB0aGlzLnRhc2tfdGV4dCA9IHBhcnNlZERhdGEuZ2V0KCd0YXNrLXRleHQnKSAvLyBzYXZlIHRhc2sgdGV4dAogICAgICAgICAgICBjb25zb2xlLmxvZygiVEFEQUFBQSIsdGhpcy50YXNrX3RleHQpCgogICAgICAgICAgICAvLyBzYXZlIHZhcmlhYmxlcyBhbmQgcXVlc3Rpb25zCiAgICAgICAgICAgIGZvciAobGV0IFtfLCB2YWx1ZV0gb2YgcGFyc2VkRGF0YS5lbnRyaWVzKCkgKSAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgY29uc29sZS5sb2coXykKICAgICAgICAgICAgICAgIGlmICggdmFsdWUgaW5zdGFuY2VvZiB2YXJpYWJsZUluZm8gKSB0aGlzLnZhcmlhYmxlcy5wdXNoKHZhbHVlKQogICAgICAgICAgICAgICAgaWYgKCB2YWx1ZSBpbnN0YW5jZW9mIHRhc2tRdWVzdGlvbiApIHRoaXMucXVlc3Rpb25zLnB1c2godmFsdWUpCiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIC8vIGV4dHJhY3QgYW5zd2VycwogICAgICAgICAgICBmb3IgKGxldCBxdWVzdGlvbiBvZiB0aGlzLnF1ZXN0aW9ucykgCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGZvciAobGV0IFtfLCB2YWx1ZV0gb2YgcXVlc3Rpb24uYW5zd2Vycy5lbnRyaWVzKCkgKQogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coXykKICAgICAgICAgICAgICAgICAgIHRoaXMuYW5zd2Vycy5wdXNoKHZhbHVlKQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CgogICAgICAgICAgICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgICAgICAgICAgIC8vIEZvciBhbGwgdmFyaWFibGVzLCBjb21wdXRlIHJhbmdlIGlmIHJhbmdlICE9ICIiCiAgICAgICAgICAgIGZvciAoIGxldCB2IG9mIHRoaXMudmFyaWFibGVzICkgCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGlmICggdi5yYW5nZS5sZW5ndGggIT0gMCApCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgbGV0IFtzdGFydCwgZW5kLCBzdGVwXSA9IHYucmFuZ2Uuc3Vic3RyaW5nKDEsIHYucmFuZ2UubGVuZ3RoLTEpLnNwbGl0KCcsJykKICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhzdGFydCwgZW5kICwgc3RlcCkKICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAvLyBHZXQgYWN0dWFsIHZhbHVlCiAgICAgICAgICAgICAgICAgICAgdi52YWx1ZSA9IHJhbmRvbUludChwYXJzZUludChzdGFydCksIHBhcnNlSW50KGVuZCkpLnRvU3RyaW5nKCkKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGVsc2UKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICB2LnZhbHVlID0gdi5kZWZpbml0aW9uOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIHRoaXMudGFza190ZXh0ID0gdGhpcy50YXNrX3RleHQucmVwbGFjZSh2Lm5hbWUsIHYudmFsdWUpCgogICAgICAgICAgICAgICAgLy8gRm9yIGVhY2ggYW5zd2VyIHJlcGxhY2UgdmFsdWUKICAgICAgICAgICAgICAgIGZvciAobGV0IGEgb2YgdGhpcy5hbnN3ZXJzKQogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgIC8vIFJlcGxhY2UgaW4gY29ycmVjdAogICAgICAgICAgICAgICAgICAgIGEuY29ycmVjdC5mb3JFYWNoKChhbnMsIGluZCkgPT4gewogICAgICAgICAgICAgICAgICAgICAgICBhLmNvcnJlY3RbaW5kXSA9IGFucy5yZXBsYWNlKHYubmFtZSwgdi52YWx1ZSkgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgICAgICAgIC8vIFJlcGxhY2UgaW4gaW5jb3JyZWN0CiAgICAgICAgICAgICAgICAgICAgYS5pbmNvcnJlY3QuZm9yRWFjaCgoYW5zLCBpbmQpID0+IHsKICAgICAgICAgICAgICAgICAgICAgICAgYS5pbmNvcnJlY3RbaW5kXSA9IGFucy5yZXBsYWNlKHYubmFtZSwgdi52YWx1ZSk7CiAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIC8vIEdldCBmaW5hbCByZXN1bHQKICAgICAgICAgICAgZm9yKGxldCBhIG9mIHRoaXMuYW5zd2VycykgCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIC8vIEV2YWx1YXRlIGV4cHJlc3Npb25zCiAgICAgICAgICAgICAgICBhLmNvcnJlY3QuZm9yRWFjaChleHByID0+IHthLmNvcnJlY3RfdmFsdWVzLnB1c2goIGV2YWx1YXRlKGV4cHIpICkgfSk7CiAgICAgICAgICAgICAgICBhLmluY29ycmVjdC5mb3JFYWNoKGV4cHIgPT4geyBhLmluY29ycmVjdF92YWx1ZXMucHVzaCggZXZhbHVhdGUoZXhwcikgKSB9KTsKICAgICAgICAgICAgfQoKCiAgICAgICAgICAgIGNvbnNvbGUubG9nKCJWQVJTIiwgdGhpcy52YXJpYWJsZXMpCiAgICAgICAgICAgIGNvbnNvbGUubG9nKCJRU1ROIiwgdGhpcy5xdWVzdGlvbnMpCiAgICAgICAgICAgIGNvbnNvbGUubG9nKCJBTlNXIiwgdGhpcy5hbnN3ZXJzKQogICAgICAgIH0gICAgIAogICAgfQp9Cg=="},{"version":3,"sources":["createtaskpage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4GA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA","file":"createtaskpage.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <v-container \n        class=\"d-flex flex-column justify-start align-center mt-10 b-g rounded-lg\">\n        \n        <h3 class=\"t-t-color text-h4 my-4 font-weight-medium\"> Task </h3>\n\n        <v-container fluid rounded label=\"Task\" class=\"d-flex flex-row\">\n            <v-col cols=\"16\" class=\"mx-2 pa-0 ma-0\">\n                <v-textarea text-narrow\n                    id=\"task-text\" class=\"text-caption\"\n                    v-model=\"text\" solo no-resize rows=\"20\">\n                </v-textarea>\n            <div>\n                <v-btn class=\"mx-1\" @click=\"parseText\">Parse</v-btn>\n                <v-btn class=\"mx-1\" @click=\"previewTask\">Preview</v-btn>\n                <v-btn class=\"mx-1\" @click=\"saveText\">Save</v-btn>\n                <v-btn class=\"mx-1\" @click=\"restoreText\">Restore</v-btn>\n            </div>\n\n            <v-overlay :value=\"taskOverlay\" >\n                    <v-sheet \n                        elevation=\"4\" width=\"600\" \n                        class=\"pa-4 ma-2 d-flex flex-column justify-flex-start align-flex-start rounded-lg\"\n                    >\n\n                    <h3>Task text: {{ task_text }}</h3>\n                    <div class=\"d-flex flex-column ma-2 pa-1\" v-for=\"(q, i) in questions\" :key=\"q\">\n                        <h4 class=\"ma-1\"> Question: {{ q.text }} </h4>\n                        <div class=\"ma-1 pa-1\" v-if=\"q.text.includes(answers[i].name)\">\n                            <p v-for=\"(item, index) in answers[i].correct_values\" :key=\"index\" >{{item}}</p>\n                            <p v-for=\"(item, index) in answers[i].incorrect_values\" :key=\"index\" >{{item}}</p>\n                        </div>\n                    </div>\n\n                    <v-btn @click=\"taskOverlay = false\">Close</v-btn>\n                    </v-sheet>\n            </v-overlay>\n\n            </v-col>\n            <v-col cols=\"16\" class=\"mx-2\">\n                <h4> Variables </h4>\n                        <v-chip\n                            v-for=\"(variable, i) in variables\" :key=\"i\"\n                            @click=\"variableInfo(i)\"\n                            :elevation=\"6\" color=\"primary\"\n                            class=\"mx-2 my-1 px-6 py-4 pointer\">\n                            {{ variable.name.substr(1) }}\n                        </v-chip>\n                        <v-overlay \n                            :value=\"overlayV\" v-if=\"variables.length != 0\">\n                            <v-sheet \n                                elevation=\"4\" width=\"250\" \n                                class=\"pa-4 ma-2 d-flex flex-column justify-flex-start align-flex-start rounded-lg\"\n                            >\n                                <h4 class=\"ma-2\"> {{ variables[indexV].name }} </h4>\n                                <p class=\"ma-2\"> Definition: {{ variables[indexV].definition }} </p>\n                                <p class=\"ma-2\"> Range: {{ variables[indexV].range }} </p>\n                                <p class=\"ma-2\"> Value: {{ variables[indexV].value }} </p>\n                                <v-btn @click=\"overlayV = false\">Close</v-btn>\n                            </v-sheet>\n                        </v-overlay>\n\n                <h4>Questions</h4>\n                <v-sheet \n                    v-for=\"question in questions\" :key=\"question\" \n                    class=\"d-flex flex-row align-center ma-1 pa-1\"\n                    width=\"50%\"\n                    elevation=\"3\"\n                    rounded\n                >\n                    <v-tooltip top >\n                        <template #activator=\"{on}\">\n                            <v-chip v-on=\"on\" label=\"text\" class=\"mx-1\"> {{ question.text }} </v-chip>\n                        </template>\n                        <span>Text</span>\n                    </v-tooltip>\n                </v-sheet>\n                <h5>Answers</h5>\n                    <v-chip\n                        v-for=\"(answer, i) in answers\" :key=\"i\"\n                        @click=\"answerInfo(i)\"\n                        :elevation=\"6\" color=\"primary\"\n                        class=\"mx-2 my-1 px-6 py-4 pointer\">\n                        {{ answer.name.substr(1) }}\n                    </v-chip>\n                    <v-overlay \n                        :value=\"overlayA\" v-if=\"answers.length != 0\">\n                        <v-sheet \n                            elevation=\"4\" width=\"250\" \n                            class=\"pa-4 ma-2 d-flex flex-column justify-flex-start align-flex-start rounded-lg\"\n                        >\n                            <h4 class=\"ma-2\"> {{ answers[indexA].name }} </h4>\n                            <p class=\"ma-2\" v-for=\"correct in answers[indexA].correct\" :key=\"correct\"> \n                                Correct: {{ correct }} \n                            </p>\n                            <p class=\"ma-2\" v-for=\"incorrect in answers[indexA].incorrect\" :key=\"incorrect\"> \n                                Incorrect: {{ incorrect }} \n                            </p>\n                            <v-btn @click=\"overlayA = false\">Close</v-btn>\n                        </v-sheet>\n                    </v-overlay>\n            </v-col>\n        </v-container>\n\n    </v-container>\n</template>\n\n<script>\n    import { tokenize } from \"../myfiles/tokenizer\"\n    import { parseMathMarkup, taskQuestion, variableInfo } from \"../myfiles/taskHandler\"\n    import { randomInt, evaluate } from \"mathjs\";\n\n    export default {\n        data() {\n            return {\n                text: \"\",\n                task_text: \"\",\n                variables: [],\n                questions: [],\n                answers: [],\n\n                overlayV: false,\n                overlayA: false,\n                taskOverlay: false,\n                indexV: 0,\n                indexA: 0,\n            };\n        },\n        computed: {\n            getText() { return this.text; }\n        },\n\n        created() {\n            window.addEventListener('beforeunload', function(event) {\n                event.returnValue = 'Write something'\n                alert(\"wait\")\n            })\n        },\n\n        methods: {\n            variableInfo : function(i) {\n                this.indexV = i\n                this.overlayV = true\n            },\n            answerInfo: function(i) {\n                this.indexA = i\n                this.overlayA = true\n            },\n            previewTask : function () {\n                this.taskOverlay = true\n\n                localStorage.setItem('data', this.text)\n            },\n            saveText: function() {\n                localStorage.setItem('data', this.text)\n            },\n            restoreText: function() {\n                this.text = localStorage.getItem('data')\n            },\n            parseText : function () {\n\n                // Tokenize\n                console.log( tokenize( this.text ) )\n\n                // parse text\n                var parsedData = parseMathMarkup( this.text )\n\n                // print out the tokenized string from the textarea\n                console.log( parsedData );\n\n                // clear arrays\n                this.variables = []\n                this.questions = []\n                this.answers = []\n                this.task_text = \"\"\n\n                this.task_text = parsedData.get('task-text') // save task text\n                console.log(\"TADAAAA\",this.task_text)\n\n                // save variables and questions\n                for (let [_, value] of parsedData.entries() ) \n                {\n                    console.log(_)\n                    if ( value instanceof variableInfo ) this.variables.push(value)\n                    if ( value instanceof taskQuestion ) this.questions.push(value)\n                }\n\n                // extract answers\n                for (let question of this.questions) \n                {\n                    for (let [_, value] of question.answers.entries() )\n                    {\n                       console.log(_)\n                       this.answers.push(value)\n                    }\n                }\n\n                // -------------------------------------------------\n                // For all variables, compute range if range != \"\"\n                for ( let v of this.variables ) \n                {\n                    if ( v.range.length != 0 )\n                    {\n                        let [start, end, step] = v.range.substring(1, v.range.length-1).split(',')\n                        console.log(start, end , step)\n                        \n                        // Get actual value\n                        v.value = randomInt(parseInt(start), parseInt(end)).toString()\n                    }\n                    else\n                    {\n                        v.value = v.definition;\n                    }\n\n                    this.task_text = this.task_text.replace(v.name, v.value)\n\n                    // For each answer replace value\n                    for (let a of this.answers)\n                    {\n                        // Replace in correct\n                        a.correct.forEach((ans, ind) => {\n                            a.correct[ind] = ans.replace(v.name, v.value)                            \n                        });\n\n                        // Replace in incorrect\n                        a.incorrect.forEach((ans, ind) => {\n                            a.incorrect[ind] = ans.replace(v.name, v.value);\n                        });\n                    }\n                }\n\n                // Get final result\n                for(let a of this.answers) \n                {\n                    // Evaluate expressions\n                    a.correct.forEach(expr => {a.correct_values.push( evaluate(expr) ) });\n                    a.incorrect.forEach(expr => { a.incorrect_values.push( evaluate(expr) ) });\n                }\n\n\n                console.log(\"VARS\", this.variables)\n                console.log(\"QSTN\", this.questions)\n                console.log(\"ANSW\", this.answers)\n            }     \n        }\n    }\n</script>\n\n<style>\n    .b-g {\n        background-color: var(--green-background-color);\n        height: 90%;\n    }\n    .r-g {\n        height: 90%;\n    }\n    .h-g {\n        border: solid 2px hotpink;\n    }\n\n    [text-narrow] {\n        line-height: 1.1 !important;\n        font-size: 1rem;\n    }\n\n    .pointer {\n        cursor: pointer !important;\n    }\n</style>"]}]}