{"remainingRequest":"/home/dc/Documents/BP/vue-bp-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dc/Documents/BP/vue-bp-web/src/components/registerpage.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/dc/Documents/BP/vue-bp-web/src/components/registerpage.vue","mtime":1648241236061},{"path":"/home/dc/Documents/BP/vue-bp-web/node_modules/css-loader/dist/cjs.js","mtime":1642114937836},{"path":"/home/dc/Documents/BP/vue-bp-web/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1642114939216},{"path":"/home/dc/Documents/BP/vue-bp-web/node_modules/postcss-loader/src/index.js","mtime":1642114938300},{"path":"/home/dc/Documents/BP/vue-bp-web/node_modules/cache-loader/dist/cjs.js","mtime":1642114936856},{"path":"/home/dc/Documents/BP/vue-bp-web/node_modules/vue-loader/lib/index.js","mtime":1642114938760}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmJvcmRlci1vdXRsaW5lewogICAgYm9yZGVyOiBzb2xpZCAxcHggdmFyKC0tbWFpbi1jb2xvcik7Cn0K"},{"version":3,"sources":["registerpage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2HA;AACA;AACA","file":"registerpage.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <v-overlay :light='true' :dark='false' color=\"white\" opacity=\"1\">\n        <v-container class=\"d-flex flex-column align-center\">\n\n                <!-- REGISTER FORM -->\n                <v-form v-model=\"valid\">\n                    <v-container class=\"d-flex flex-column align-center b-g rounded-lg pa-7 elevation-3\">\n                    <!-- LOGO -->\n                        <div class=\"d-flex align-center mb-6\">\n                            <router-link to=\"/\">\n                            <v-img alt=\"Math Logo by IC\" class=\"shrink\" contain src=\"../assets/math_logo2.svg\" width=\"130\"/>\n                            </router-link>\n                        </div>\n\n                        <!-- Name input -->\n                        <p class=\"ma-0 pl-1 text-left font-weight-medium align-self-start\">Name</p>\n                        <v-text-field\n                            dense solo type=\"text\" \n                            prepend-inner-icon=\"mdi-account-outline\"\n                            v-model=\"name\" :rules=\"rules['required']\">\n                        </v-text-field>\n                        <!-- Surname input -->\n                        <p class=\"ma-0 pl-1 text-left font-weight-medium align-self-start\">Surname</p>\n                        <v-text-field\n                            dense solo type=\"text\" \n                            prepend-inner-icon=\"mdi-account-outline\"\n                            v-model=\"surname\" :rules=\"rules['required']\">\n                        </v-text-field>\n\n                        <!-- Type of user -->\n                        <p class=\"ma-0 pl-1 text-left font-weight-medium align-self-start\"> Role </p>\n                        <v-radio-group row v-model=\"userType\" hide-details class=\"mt-0 mb-2\" required>\n                                <v-radio label=\"Student\" value=\"0\"></v-radio>\n                                <v-radio label=\"Teacher\" value=\"1\"></v-radio>\n                        </v-radio-group>\n\n                        <!-- E-mail input -->\n                        <p class=\"ma-0 pl-1 text-left font-weight-medium align-self-start\">E-mail</p>\n                        <v-text-field\n                            dense solo type=\"text\" \n                            prepend-inner-icon=\"mdi-at\"\n                            required v-model=\"email\" :rules=\"rules['email']\">\n                        </v-text-field>\n                        \n                        <!-- Password input -->\n                        <p class=\"ma-0 pl-1 text-left font-weight-medium align-self-start\">Password</p>\n                        <v-text-field\n                            dense solo type=\"password\"\n                            prepend-inner-icon=\"mdi-lock-outline\"\n                            required v-model=\"password\" :rules=\"rules['required']\">\n                        </v-text-field>\n                        \n                        <!-- Buttons -->\n                        <v-btn @click=\"registerUser()\" :loading=\"loading\" block class=\"px-6 py-2\" color=\"primary\"> Register </v-btn>\n                        <v-btn to=\"/login\" :ripple=\"false\" text plain class=\"mt-4 mb-0 px-3 py-1 no-uppercase text-caption\"> I already have an account </v-btn>\n                    </v-container>\n                </v-form>\n        </v-container>\n    </v-overlay>\n</template>\n\n<script>\nimport UserDataService from '../services/userDataService';\n\nexport default {\n    data() {\n        return {\n            name: '',\n            surname: '',\n            email: '',\n            password: '',\n            rules: {\n                email: [\n                    v => !!v || 'E-mail is required',\n                    v => /.+@.+\\..+/.test(v) || 'E-mail must be valid',\n                ],\n                required: [\n                    v => !!v || 'This field is required',\n                ]\n            },\n\n            userType: 0,\n            userTypes: ['student', 'teacher', 'admin'],\n\n            loading: false,\n            valid: false,\n        }\n    },\n\n    methods: {\n        async registerUser() {\n            const newUser = {\n                name: this.name,\n                surname: this.surname,\n                email: this.email,\n                password: this.password,\n                type: this.userTypes[this.userType]\n            }\n\n            this.loading = true;\n\n            // Gives a sense of calculation, shows loading to user\n            await new Promise(resolve => setTimeout(resolve, 1000));\n\n            UserDataService.create(newUser)\n            .then((res) => {\n                console.log(res); \n                this.loading = false;\n                this.moveToPage('login');\n                this.$store.dispatch('showMessage', {message: 'Account created! You can now log in.'});\n            })\n            .catch((err) => {\n                // TODO nevyplnene udaje\n                console.log(\"Error:\", err);\n                this.loading = false;\n                this.$store.dispatch('showMessage',{message: \"Something went wrong!\", success: false});\n            })\n        }\n    }\n}\n</script>\n\n<style> \n    .border-outline{\n        border: solid 1px var(--main-color);\n    }\n</style>"]}]}