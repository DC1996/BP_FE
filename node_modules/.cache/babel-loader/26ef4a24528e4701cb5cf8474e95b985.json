{"remainingRequest":"/home/dc/Documents/BP/vue-bp-web/node_modules/babel-loader/lib/index.js!/home/dc/Documents/BP/vue-bp-web/node_modules/eslint-loader/index.js??ref--14-0!/home/dc/Documents/BP/vue-bp-web/src/store/modules/testData.module.js","dependencies":[{"path":"/home/dc/Documents/BP/vue-bp-web/src/store/modules/testData.module.js","mtime":1649942526697},{"path":"/home/dc/Documents/BP/vue-bp-web/babel.config.js","mtime":1646999302412},{"path":"/home/dc/Documents/BP/vue-bp-web/node_modules/cache-loader/dist/cjs.js","mtime":1642114936856},{"path":"/home/dc/Documents/BP/vue-bp-web/node_modules/babel-loader/lib/index.js","mtime":1642114938312},{"path":"/home/dc/Documents/BP/vue-bp-web/node_modules/eslint-loader/index.js","mtime":1642114937120}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/dc/Documents/BP/vue-bp-web/src/store/modules/testData.module.js"],"names":["categoryDataService","generatorService","taskDataService","testDataService","namespaced","state","id","name","timeLimit","grade","grades","tasks","concreteTasks","taskCategories","answerOptions","selectedTasks","selectedTaskCategories","selectedAnswerOptions","stepCounter","mutations","START_TEST_CREATION","payload","categories","START_TEST_MODIFICATION","console","log","MOVE_TO_NEXT_STEP","value","MOVE_TO_PREV_STEP","SET_NAME","SET_GRADE","SET_TIME_LIMIT","SET_SELECTED_CATEGORY","push","category","REMOVE_SELECTED_CATEGORY","splice","categoryIndex","SET_SELECTED_TASK","task","REMOVE_SELECTED_TASK","index","GET_TASKS","SET_CONCRETE_TASKS","REMOVE_CONCRETE_TASK","SET_RENDER_OPTION_TO_CONCRETE_TASK","length","renderOption","actions","startTestCreation","context","getAll","then","data","map","commit","startTestModification","get","testId","test","testData","content","testTasks","dispatch","moveToNextStep","moveToPrevStep","setName","setGrade","setTimeLimit","setSelectedCategory","findIndex","setSelectedTask","taskId","taskIndex","generateConcreteTasks","generateMultiple","abstractTasks","response","updatedConcreteTasks","concreteTask","foundInArray","find","abstractTaskId","catch","error","setRenderOption","removeConcreteTask","concreteTaskIndex","abstractTaskIndex","getTasks","findAllMatching","getters","isCategorySelected","selected_id","undefined","isTaskSelected"],"mappings":"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","sourcesContent":["import categoryDataService from \"../../services/categoryDataService\";\nimport generatorService from \"../../services/generatorService\";\nimport taskDataService from \"../../services/taskDataService\";\nimport testDataService from \"../../services/testDataService\";\n\nexport default {\n  namespaced: true,\n  // Data section\n  state: {\n    id: 0,\n    name: \"\",\n    timeLimit: 15,\n\n    grade: \"0\",\n    grades: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"],\n\n    tasks: [],\n    concreteTasks: [],\n    taskCategories: [],\n    answerOptions: [\"text\", \"radio\", \"select\", \"checkbox\"],\n\n    selectedTasks: [],\n    selectedTaskCategories: [],\n    selectedAnswerOptions: [],\n\n    stepCounter: 1,\n  },\n\n  // Internal state changers\n  mutations: {\n    START_TEST_CREATION(state, payload) {\n      state.id = 0;\n      state.name = \"New Test\";\n      state.grade = \"0\";\n      state.timeLimit = 15;\n      state.categories = payload.categories;\n      state.tasks = [];\n      state.selectedTasks = [];\n      state.concreteTasks = [];\n      state.selectedTaskCategories = [];\n      state.stepCounter = 1;\n    },\n    START_TEST_MODIFICATION(state, payload) {\n      state.id = payload.id;\n      state.name = payload.name;\n      state.grade = payload.grade;\n      state.timeLimit = payload.timeLimit;\n      state.selectedTasks = payload.tasks;\n      state.categories = payload.categories;\n      state.stepCounter = 4;\n\n      console.log(\"SET TO: \", state.timeLimit);\n    },\n\n    MOVE_TO_NEXT_STEP(state, payload) {\n      state.stepCounter = payload.value;\n    },\n    MOVE_TO_PREV_STEP(state, payload) {\n      state.stepCounter = payload.value;\n    },\n\n    SET_NAME(state, payload) {\n      state.name = payload.name;\n    },\n    SET_GRADE(state, payload) {\n      state.grade = payload.value;\n    },\n    SET_TIME_LIMIT(state, payload) {\n      state.timeLimit = payload.timeLimit;\n    },\n\n    SET_SELECTED_CATEGORY(state, payload) {\n      state.selectedTaskCategories.push(payload.category);\n    },\n    REMOVE_SELECTED_CATEGORY(state, payload) {\n      state.selectedTaskCategories.splice(payload.categoryIndex, 1);\n    },\n\n    SET_SELECTED_TASK(state, payload) {\n      state.selectedTasks.push(payload.task);\n      console.log(\"SELECTED: \", state.selectedTasks);\n    },\n    REMOVE_SELECTED_TASK(state, payload) {\n      state.selectedTasks.splice(payload.index, 1);\n      console.log(\"SELECTED: \", state.selectedTasks);\n    },\n\n    GET_TASKS(state, payload) {\n      state.tasks = payload.tasks;\n    },\n\n    SET_CONCRETE_TASKS(state, payload) {\n      state.concreteTasks = payload.concreteTasks;\n      console.log(\"generated concrete tasks\", state.concreteTasks);\n    },\n    REMOVE_CONCRETE_TASK(state, payload) {\n      state.concreteTasks.splice(payload.index, 1);\n    },\n\n    SET_RENDER_OPTION_TO_CONCRETE_TASK(state, payload) {\n      if (payload.index < state.concreteTasks.length) {\n        state.concreteTasks[payload.index].renderOption = payload.renderOption;\n      }\n    },\n  },\n\n  // Events, event handlers\n  actions: {\n    startTestCreation(context) {\n      categoryDataService.getAll().then((categories) => {\n        let payload = {\n          categories: categories.data.map((category) => {\n            return {\n              id: category.id,\n              name: category.name,\n            };\n          }),\n        };\n        context.commit(\"START_TEST_CREATION\", payload);\n      });\n    },\n\n    // Modify was clicked from the Your tests table\n    async startTestModification(context, payload) {\n      // Fetch test from database\n      let test = await testDataService.get(payload.testId);\n      let categories = await categoryDataService.getAll();\n\n      console.log(\"MOVING TO MODIFY\", test.data.tasks);\n\n      // Prepare test data\n      let testData = {\n        id: test.data.id,\n        name: test.data.name,\n        grade: test.data.grade,\n        timeLimit: test.data.timeLimit,\n        // Set task properties\n        tasks: test.data.tasks.map((task) => {\n          return {\n            id: task.id,\n            name: task.name,\n            content: task.content,\n            renderOption: task.testTasks.renderOption,\n          };\n        }),\n        // Set categories\n        categories: categories.data.map((category) => {\n          return {\n            id: category.id,\n            name: category.name,\n          };\n        }),\n      };\n      // Set test data\n      context.commit(\"START_TEST_MODIFICATION\", testData);\n      context.dispatch(\"generateConcreteTasks\");\n    },\n\n    // Move to next step\n    moveToNextStep(context) {\n      let stepCounter = context.state.stepCounter + 1;\n      context.commit(\"MOVE_TO_NEXT_STEP\", { value: stepCounter });\n    },\n\n    // Move to next step\n    moveToPrevStep(context) {\n      let stepCounter =\n        context.state.stepCounter == 1 ? 1 : context.state.stepCounter - 1;\n      context.commit(\"MOVE_TO_NEXT_STEP\", { value: stepCounter });\n    },\n\n    setName(context, payload) {\n      context.commit(\"SET_NAME\", payload);\n    },\n\n    // Set selected grade\n    setGrade(context, payload) {\n      let grade = context.state.grade == payload.value ? \"0\" : payload.value;\n      context.commit(\"SET_GRADE\", { value: grade });\n    },\n\n    // Set time limit\n    setTimeLimit(context, payload) {\n      context.commit(\"SET_TIME_LIMIT\", payload);\n    },\n\n    // Set selected category\n    setSelectedCategory(context, payload) {\n      let categories = context.state.selectedTaskCategories;\n      // Check if category is already selected\n      let categoryIndex = categories.findIndex(\n        ({ id }) => payload.category.id === id\n      );\n\n      // Set or remove from selected categories\n      if (categoryIndex == -1) {\n        context.commit(\"SET_SELECTED_CATEGORY\", payload);\n      } else {\n        context.commit(\"REMOVE_SELECTED_CATEGORY\", { categoryIndex });\n      }\n    },\n\n    // Set selected task for test\n    setSelectedTask(context, payload) {\n      // Find index in array\n      let taskId = payload.task.id;\n      let tasks = context.state.selectedTasks;\n      let taskIndex = tasks.findIndex(({ id }) => taskId === id);\n\n      if (taskIndex == -1) {\n        // Save selected abstractTask\n        context.commit(\"SET_SELECTED_TASK\", payload);\n      } else {\n        context.commit(\"REMOVE_SELECTED_TASK\", { index: taskIndex });\n      }\n    },\n\n    // Populate the concreteTasks array with generated abstractTasks\n    generateConcreteTasks(context) {\n      generatorService\n        .generateMultiple({\n          abstractTasks: context.state.selectedTasks,\n        })\n        .then((response) => {\n          let updatedConcreteTasks = [];\n\n          // Check if concreteTask is already in the array\n          for (let concreteTask of response.data.concreteTasks) {\n            // Find concreteTask in array\n            let foundInArray = context.state.concreteTasks.find(\n              ({ abstractTaskId }) =>\n                concreteTask.abstractTaskId == abstractTaskId\n            );\n\n            if (!foundInArray) {\n              // Add to updatedConcreteTasks\n              updatedConcreteTasks.push(foundInArray);\n            } else {\n              // Update Content (but save)\n              foundInArray.content = concreteTask.content;\n            }\n          }\n\n          let payload = { concreteTasks: response.data.concreteTasks };\n          context.commit(\"SET_CONCRETE_TASKS\", payload);\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    },\n\n    // Set render options to concrete Tasks\n    setRenderOption(context, payload) {\n      context.commit(\"SET_RENDER_OPTION_TO_CONCRETE_TASK\", payload);\n    },\n\n    // Removes selected concreteTask\n    removeConcreteTask(context, payload) {\n      // Find indexes of concreteTask and abstractTask\n      let concreteTaskIndex = context.state.concreteTasks.findIndex(\n        ({ abstractTaskId }) => payload.index == abstractTaskId\n      );\n      let abstractTaskIndex = context.state.selectedTasks.findIndex(\n        ({ id }) => payload.index == id\n      );\n\n      // Remove selected concreteTask and abstractTask from their arrays\n      context.commit(\"REMOVE_SELECTED_TASK\", { index: abstractTaskIndex });\n      context.commit(\"REMOVE_CONCRETE_TASK\", { index: concreteTaskIndex });\n    },\n\n    // Load task from database by category\n    async getTasks(context) {\n      console.log(\"Categories selected\", context.state.selectedTaskCategories);\n\n      taskDataService\n        .findAllMatching({\n          grade: context.state.grade,\n          categories: context.state.selectedTaskCategories.map(\n            ({ name }) => name\n          ),\n        })\n        .then((response) => {\n          let payload = {\n            // Map task properties\n            tasks: response.data.map((task) => {\n              return {\n                id: task.id,\n                name: task.name,\n                content: task.content,\n                renderOption: \"text\", // set default render option\n              };\n            }),\n          };\n          context.commit(\"GET_TASKS\", payload);\n        });\n    },\n  },\n  // Outputs\n  getters: {\n    isCategorySelected: (state) => (selected_id) => {\n      return (\n        state.selectedTaskCategories.find(({ id }) => id === selected_id) !=\n        undefined\n      );\n    },\n\n    isTaskSelected: (state) => (selected_id) => {\n      return (\n        state.selectedTasks.find(({ id }) => id === selected_id) != undefined\n      );\n    },\n  },\n};\n"]}]}