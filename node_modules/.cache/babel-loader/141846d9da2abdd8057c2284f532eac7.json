{"remainingRequest":"/home/dc/Documents/BP/vue-bp-web/node_modules/babel-loader/lib/index.js!/home/dc/Documents/BP/vue-bp-web/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/dc/Documents/BP/vue-bp-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dc/Documents/BP/vue-bp-web/src/components/createTestPage.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dc/Documents/BP/vue-bp-web/src/components/createTestPage.vue","mtime":1648206485796},{"path":"/home/dc/Documents/BP/vue-bp-web/babel.config.js","mtime":1646999302412},{"path":"/home/dc/Documents/BP/vue-bp-web/node_modules/cache-loader/dist/cjs.js","mtime":1642114936856},{"path":"/home/dc/Documents/BP/vue-bp-web/node_modules/babel-loader/lib/index.js","mtime":1642114938312},{"path":"/home/dc/Documents/BP/vue-bp-web/node_modules/cache-loader/dist/cjs.js","mtime":1642114936856},{"path":"/home/dc/Documents/BP/vue-bp-web/node_modules/vue-loader/lib/index.js","mtime":1642114938760}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["createTestPage.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n\n    <!-- Show step completion and content of each step -->\n    <v-stepper v-model=\"e1\" class=\"px-2 mt-6 mx-14 b-g\" style=\"height: calc(100% - 2.5rem);\">\n\n    <!-- Steps at the top -->\n    <v-stepper-header class=\"mx-6 mt-2 pa-0 elevation-0\">\n      <v-stepper-step :complete=\"e1 > 1\" step=\"1\"> Select grade </v-stepper-step>\n      <v-divider></v-divider>\n      <v-stepper-step :complete=\"e1 > 2\" step=\"2\"> Select category </v-stepper-step>\n      <v-divider></v-divider>\n      <v-stepper-step :complete=\"e1 > 3\" step=\"3\"> Select tasks </v-stepper-step>\n      <v-divider></v-divider>\n      <v-stepper-step :complete=\"e1 > 4\" step=\"4\"> Configure tasks </v-stepper-step>\n    </v-stepper-header>\n\n    <!-- Content of each step -->\n    <v-stepper-items style=\"height: 100%\">\n\n      <!-- Select task grade from given list -->\n      <v-stepper-content step=\"1\">\n        \n        <v-container fluid class=\"\">\n            <v-row align=\"center\" justify=\"center\" v-for=\"(it1, i) in [0,3,6]\" :key=\"i\">\n                <v-col align=\"center\" justify=\"center\" v-for=\"(it2, i) in [1,2,3]\" :key=\"i\">\n                    <v-badge :value=\"selectedGrade[it1 + it2]\" color=\"primary\" icon=\"mdi-check\" overlap>\n                        <v-card \n                            :flat=\"selectedGrade.find(g => g == true) == undefined || selectedGrade.findIndex(g => g == true) != it1 + it2\"\n                            :disabled=\"selectedGrade.find(g => g == true) != undefined && selectedGrade.findIndex(g => g == true) != it1 + it2\" \n                            @click=\"setSelected(selectedGrade, it1 + it2)\" class=\"pa-4 tiled-button\" style=\"width: 150px\">\n                            <h4> {{ it1 + it2 }}. grade </h4>\n                        </v-card>\n                    </v-badge>\n                </v-col>\n            </v-row>\n\n            <v-spacer></v-spacer>\n            <v-spacer></v-spacer>\n\n            <!-- Action buttons -->\n            <v-row class=\"d-flex justify-end pa-2 px-6 mt-2\">\n              <v-btn \n                @click=\"populateDatabase()\"\n                class=\"my-2 mx-2 align-self-end\" text> Cancel </v-btn>\n              <v-btn \n                :disabled=\"selectedGrade.find(g => g == true) == undefined\" \n                class=\"my-2 align-self-end\" color=\"primary\" @click=\"e1 = 2\"> Continue </v-btn>\n            </v-row>\n        </v-container>\n\n      </v-stepper-content>\n\n      <!-- Select task categories from list -->\n      <v-stepper-content step=\"2\">\n        <v-container fluid class=\"d-flex flex-column justify-end\">\n            \n              <v-col align=\"center\" justify=\"center\" v-for=\"(category, i) in categories\" :key=\"i\">\n                  <v-badge :value=\"selectedCategory[i]\" color=\"primary\" icon=\"mdi-check\" overlap>\n                      <v-card @click=\"setSelected(selectedCategory, i)\" class=\"pa-4\" style=\"width: 150px\">\n                          <h4> {{ category.name }}</h4>\n                      </v-card>\n                  </v-badge>\n              </v-col>\n\n          <v-row class=\"d-flex justify-end pa-2 px-6 mt-2\">\n            <v-btn class=\"my-2 mx-2 align-self-end\" text> Cancel </v-btn>\n            <v-btn class=\"my-2 align-self-end\" color=\"primary\" @click=\"e1 = 3\"> Continue </v-btn>\n          </v-row>\n            \n        </v-container>\n\n      </v-stepper-content>\n\n      <!-- Select task from the list -->\n      <v-stepper-content step=\"3\">\n\n        <v-container class=\"d-flex flex-column\">\n\n          <v-badge \n            v-for=\"(task, index) in tasks\" :key=\"index\" \n            :value=\"selectedTask[task.id]\" color=\"primary\" icon=\"mdi-check\" overlap>\n            <v-card @click=\"setSelected(selectedTask, task.id)\" class=\"px-4\">\n              <h4 class=\"py-1 pt-3\"> {{ task.name }} </h4>\n              <p class=\"pb-3\"> {{ task.content.slice(0, 64)+\"...\" }} </p>\n          </v-card>            \n          </v-badge>\n\n        </v-container>\n\n        <!-- Action buttons -->\n        <v-row class=\"d-flex justify-end pa-2 px-6 mt-2\">\n          <v-btn class=\"my-2 mx-2 align-self-end\" text> Cancel </v-btn>\n          <v-btn class=\"my-2 align-self-end\" color=\"primary\" @click=\"e1 = 4\"> Continue </v-btn>\n        </v-row>\n\n      </v-stepper-content>\n\n      <!-- See preview of each task, modify render options -->\n      <v-stepper-content step=\"4\">\n\n        <v-container class=\"d-flex flex-column\">\n\n          <p class=\"text-h4 align-self-center\"> New Test Name </p>\n\n          <v-card hover outlined class=\"my-2 mx-6\" v-for=\"(task, t_index) in concreteTasks\" :key=\"t_index\">\n            \n            <v-card-title class=\"d-flex justify-space-between\"> \n              Task #{{ t_index + 1 }} \n              <!-- buttons on card -->\n              <v-card-actions>\n                <!-- question heading and edit asnwer type button -->\n                <v-tooltip bottom>\n                  <template v-slot:activator=\"{ on, attrs }\">\n                    <v-btn \n                      @click=\"selectedTaskNumber = t_index; setAnswerOptionDialog = true\" \n                      icon v-bind=\"attrs\" v-on=\"on\">\n                      <v-icon color=\"primary\">\n                        mdi-tune\n                      </v-icon>\n                    </v-btn>\n                  </template>\n                  <span class=\"font-weight-light\">Edit answer type</span>\n                </v-tooltip>\n                <!-- modify task button -->\n                <v-tooltip bottom>\n                  <template v-slot:activator=\"{ on, attrs }\">\n                    <v-btn @click=\"modifyTask(task)\" icon v-bind=\"attrs\" v-on=\"on\">\n                      <v-icon color=\"var(--main-text-color)\">\n                        mdi-pencil-outline\n                      </v-icon>\n                    </v-btn>\n                  </template>\n                  <span class=\"font-weight-light\">Edit task</span>\n                </v-tooltip>\n                <!-- change task answer type -->\n                <v-tooltip bottom>\n                  <template v-slot:activator=\"{ on, attrs }\">\n                    <v-btn \n                      @click.stop=\"selectedTaskNumber = t_index; removeDialog = true\" \n                      icon v-bind=\"attrs\" v-on=\"on\">\n                      <v-icon color=\"error\">\n                        mdi-close-circle-outline\n                      </v-icon>\n                    </v-btn>\n                  </template>\n                  <span class=\"font-weight-light\">Remove task</span>\n                </v-tooltip>\n              </v-card-actions>\n            </v-card-title>\n            \n            <v-card-subtitle class=\"mt-1\"> <p> {{ task.content.text }} </p> </v-card-subtitle>\n            \n            <v-card-text>\n              <div \n                class=\"d-flex flex-column justify-center align-start\"  \n                v-for=\"(q, i) in task.content.questions\" :key=\"i\">\n\n                <div class=\"d-flex flex-row justify-flex-start align-center\">\n                  <!-- Question -->\n                  <p v-if=\"answerOptions[t_index] != 'select'\"\n                    class=\"font-weight-light align-self-center ma-0 pl-2\"> \n                    <span class=\"font-weight-medium\"> Question #{{ i+1 }} </span>\n                    : {{ q.text }}\n                  </p>\n                  <p v-if=\"answerOptions[t_index] == 'select'\" \n                    class=\"font-weight-light align-self-center ma-0 pl-1\"> \n                    <span class=\"font-weight-medium\"> Question #{{ i+1 }} </span>\n                    : {{ q.text }}\n                  </p>\n                </div>\n\n                <!-- Answers -->\n                <!-- type == 'select' -->\n                <div class=\"d-flex flex-row justify-space-between mb-1\" v-if=\"answerOptions[t_index] == 'select'\"> \n                  <div class=\"d-flex flex-column py-1 px-2\" v-for=\"(answer, index) in q.answers\" :key=\"index\">\n                      <v-select :items=\"answer.correct.concat(answer.incorrect)\" :label=\"answer.name\" outlined></v-select>\n                  </div>\n                </div>\n\n                <!-- type == 'radio' -->\n                <div class=\"d-flex flex-row justify-space-between mb-1\" v-if=\"answerOptions[t_index] == 'radio'\">  \n                  <div class=\"d-flex flex-column py-1 px-2\" v-for=\"(answer, index) in q.answers\" :key=\"index\">\n                    <p> {{ answer.name }} </p>\n                    <v-radio-group v-model=\"placeholderModel\">\n                      <v-radio class=\"py-1\"\n                        v-for=\"(value, i) in answer.correct.concat(answer.incorrect)\"\n                        :key=\"value\" :label=\"value\" :value=\"i\">\n                      </v-radio>\n                    </v-radio-group>\n                  </div>\n                </div>\n\n                <!-- type == 'checkbox' -->\n                <div class=\"d-flex flex-row justify-space-between mb-1\" v-if=\"answerOptions[t_index] == 'checkbox'\"> \n                  <div class=\"d-flex flex-column py-1 px-2\" v-for=\"(answer, index) in q.answers\" :key=\"index\">\n                    <p> {{ answer.name }} </p>\n                      <v-checkbox class=\"pa-0 ma-0\" v-for=\"(value, i) in answer.correct.concat(answer.incorrect)\"\n                        :key=\"value\" :label=\"value\" :value=\"i\">\n                      </v-checkbox>\n                  </div>\n                </div>\n\n                <!-- type == 'text' -->\n                <div class=\"d-flex flex-row justify-space-between mb-1\" v-if=\"answerOptions[t_index] == 'text'\"> \n                  <div class=\"dflex flex-column py-1 px-2\" v-for=\"(answer, index) in q.answers\" :key=\"index\">\n                      <v-text-field\n                        :label=\"answer.name\"\n                        outlined\n                      ></v-text-field>\n                  </div>\n                </div>\n\n              </div>\n            </v-card-text>\n          </v-card>\n        </v-container>\n\n        <v-row class=\"d-flex justify-center align-center pa-2 px-6 mt-2\">\n          <v-btn outlined class=\"my-2 mb-4 mx-2 align-self-end\" text> Cancel </v-btn>\n          <v-btn class=\"my-2 mb-4 mx-2 align-self-end\" color=\"primary\" @click=\"createAndSaveTest()\"> Finish & Save</v-btn>\n        </v-row>\n\n        <v-dialog v-model=\"removeDialog\" width=\"350\" :retain-focus=\"false\">\n              <v-card>\n                  <v-card-title class=\"text-h5 lighten-2\"> Remove Task #{{selectedTaskNumber+1}} from test </v-card-title>\n\n                  <v-card-text> Are you sure you want to remove this task? </v-card-text>\n\n                  <v-divider></v-divider>\n\n                  <v-card-actions>\n                      <v-btn color=\"black\" outlined text @click=\"removeDialog = false\"> Cancel </v-btn>\n                      <v-btn dark color=\"red\" @click=\"removeTask(selectedTaskNumber)\"> Delete </v-btn>\n                  </v-card-actions>\n                  \n              </v-card>\n            </v-dialog>\n\n\n            <!-- Answer type options dialog -->\n            <v-dialog v-model=\"setAnswerOptionDialog\" width=\"500\" :retain-focus=\"false\">\n              <v-card>\n                  <v-card-title class=\"text-h5 lighten-2\"> Task #{{selectedTaskNumber+1}} answer options </v-card-title>\n\n                  <v-card-text> \n                    <p>Select answer type</p>\n                    <v-slider \n                      v-model=\"selectedAnswerType\" \n                      :tick-labels=\"answerTypes\" :max=\"3\"\n                      step=\"1\" ticks=\"always\" tick-size=\"6\"\n                      >\n                    </v-slider>\n                  </v-card-text>\n\n                  <v-divider></v-divider>\n\n                  <v-card-actions>\n                      <v-spacer></v-spacer>\n                      <v-btn color=\"black\" outlined text @click=\"setAnswerOptionDialog = false\"> Cancel </v-btn>\n                      <v-btn dark color=\"primary\" @click=\"setAnswerOption(selectedTaskNumber, selectedAnswerType)\"> Save </v-btn>\n                  </v-card-actions>\n                  \n              </v-card>\n            </v-dialog>\n\n      </v-stepper-content>\n\n    </v-stepper-items>\n  </v-stepper>\n</template>\n\n<script>\nimport TaskDataService from \"../services/taskDataService\";\nimport CategoryDataService from \"../services/categoryDataService\";\nimport GeneratorService from \"../services/generatorService\";\nimport { parseMathLang } from \"../myfiles/taskHandler\";\n\nimport { initMathJax, renderByMathjax } from 'mathjax-vue';\nimport TestDataService from '../services/testDataService';\n\nexport default {\n    data() {\n        return {\n            // stepper completion and list items on each page\n            e1: 1,\n            selectedGrade: [false,false,false,false,false,false,false,false,false,false],\n            selectedCategory: [false,false,false,false,false,false,false,false,false,false],\n            selectedTask: [false,false,false,false,false,false,false,false,false,false],\n            selectedTaskNumber: -1,\n            \n            // task handling\n            tasks: [],\n            concreteTasks: [],\n            categories: [],\n\n            // answer types and rendering\n            answerTypes: [ 'text', 'radio', 'select', 'checkbox' ],\n            answerOptions: [],\n            selectedAnswerType: 'text',\n            setAnswerOptionDialog: false,\n\n            // remove task dialog\n            removeDialog: false,\n            \n            placeholderModel: 0,\n        }\n    },\n    methods: {\n        // set Answer Type option\n        setAnswerOption(i, option) {\n          this.answerOptions.splice(i, 1, this.answerTypes[option]);\n          this.setAnswerOptionDialog = false;\n          this.selectedAnswerType = 'text';\n          console.log(this.answerOptions[i])\n\n          initMathJax({})\n\n          function onMathJaxReady() {\n            const el = document.getElementById(\"answers\");\n            renderByMathjax(el);\n          }\n\n          initMathJax({}, onMathJaxReady);\n        },\n\n        // remove selected task\n        removeTask(i) {\n          this.removeDialog = false;\n          this.concreteTasks.splice(i, 1);\n        },\n\n        // choose from items in the list\n        setSelected(selection, i) {\n            selection.splice(i, 1, !selection[i]);\n        },\n\n        // setup mapping of tasks\n        getDisplayTask(task) {\n            return {\n                id: task.id,\n                name: task.name,\n                content: task.content,\n                last_mod: task.updatedAt\n            };\n        },\n\n        // setup mapping of categories\n        getDisplayCategory(category) {\n            return {\n                id: category.id,\n                name: category.name\n            };\n        },\n\n        // get Tasks from database\n        retrieveTasks() {\n          TaskDataService.getAll()\n            .then((response) => {\n              this.tasks = response.data.map(this.getDisplayTask);\n              console.log(response.data);\n\n              // Generate preview for each task that was loaded\n              this.tasks.forEach(task => {\n                let abstractTask = parseMathLang(task.content);\n\n                GeneratorService.generate({content: abstractTask}).then((res) => {\n                  // Save id of task and add to concreteTasks array\n                  this.concreteTasks.push({id: task.id, content: res.data.content});\n                  this.answerOptions.push('text');\n                  console.log(this.concreteTasks);\n                })\n              });\n\n              \n            })\n            .catch((e) => {\n              console.log(e);\n            });\n        },\n\n        // get Categories from database\n        retrieveCategories() {\n          CategoryDataService.getAll()\n            .then((response) => {\n              this.categories = response.data.map(this.getDisplayCategory);\n              console.log(response.data);\n            })\n            .catch((e) => {\n              console.log(e);\n            });\n        },\n\n        // Create new test and add tasks that the user selected\n        createAndSaveTest() {\n          TestDataService.create({name: \"Test name\"}).then((response) => {\n            let testId = response.data.id;\n\n            this.concreteTasks.forEach((task, index) => {\n\n              console.log(\"SENDING\", this.answerOptions[index]);\n\n              TestDataService.addTask(\n                {testId: testId, taskId: task.id, taskRenderOption: this.answerOptions[index]}\n              )\n              .then((res) => console.log(res));\n            });\n            \n            this.$router.push({ name: \"yourTests\" });\n          });\n        },\n\n        // Set some intial values in the database after it is cleared for some reason\n        populateDatabase() {\n          TaskDataService.create({name: \"Task #1\", content: \"#text Calculate the following.\\n\\n#question $x1 + $x2 = @r \\n\\n#definitions\\n$x1\\n$x2\\n\\n@r.correct = [\\n$x1 + $x2\\n]\\n@r.incorrect = [\\n$x1 + $x2 + 1,\\n$x1 + $x2 - 1,\\n$x1 - $x2n\\n]\\n\\n#ranges\\n$x1 = range(0, 100, 1)\\n$x2 = range(0, 100, 1)\"});\n          TaskDataService.create({name: \"Task #2\", content: \"#text Štvorec so stranou a = $a v sebe má štyri menšie kocky.\\n\\n#question Aká je dĺžka strany menšieho štvorca? @a_m\\n\\n#definitions\\n$a\\n\\n@a_m.correct = [\\n$a / 4\\n]\\n@a_m.incorrect = [\\n$a / 3,\\n$a / 4 - 1,\\n$a / 2\\n]\\n\\n#ranges\\n$a = range(4, 40, 1)\\n\"});\n          TaskDataService.create({name: \"Task #3\", content: \"#text Majme obdlznik so stranami a = $a, b = $b.\\nDruhý obdlznik má strany o 1/4 menšie ako ten prvý.\\n\\n#question \\nUrčite velkosť strán druhého obdĺžnika. a = @res_a, b = @res_b.\\n\\n#question \\nAký je obsah prvého obdlznika? @obs\\n\\n#question \\nAký je obvod druhého obdlznika? @obv\\n\\n#definitions\\n$a\\n$b\\n\\n@res_a.correct = [\\n$a/4\\n]\\n@res_b.correct = [\\n$b/4\\n]\\n\\n@obs.correct = [\\n$a*$b\\n]\\n@obv.correct = [\\n(($a/4)+($b/4))*2\\n]\\n\\n#ranges\\n$a = range(4, 24, 1)\\n$b = range(6, 36, 1)\\n\"});\n\n          CategoryDataService.create({name: \"Word problems\"});\n          CategoryDataService.create({name: \"Definitions\"});\n          CategoryDataService.create({name: \"Geometry\"});\n          CategoryDataService.create({name: \"Pythagorean theorem\"});\n          CategoryDataService.create({name: \"Equations\"});\n          CategoryDataService.create({name: \"Expressions\"});\n        },\n    },\n\n    // This function runs before the UI loads\n    beforeMount() {\n        // Load categories and tasks from the database\n        this.retrieveCategories();\n        this.retrieveTasks();\n    },\n}\n</script>\n\n<style>\n  .b-g {\n    background-color: var(--green-background-color);\n  }\n</style>"],"sourceRoot":"src/components"}]}