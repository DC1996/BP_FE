{"remainingRequest":"/home/dc/Documents/BP/vue-bp-web/node_modules/babel-loader/lib/index.js!/home/dc/Documents/BP/vue-bp-web/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/dc/Documents/BP/vue-bp-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dc/Documents/BP/vue-bp-web/src/components/yourtasks.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dc/Documents/BP/vue-bp-web/src/components/yourtasks.vue","mtime":1649952660020},{"path":"/home/dc/Documents/BP/vue-bp-web/babel.config.js","mtime":1646999302412},{"path":"/home/dc/Documents/BP/vue-bp-web/node_modules/cache-loader/dist/cjs.js","mtime":1642114936856},{"path":"/home/dc/Documents/BP/vue-bp-web/node_modules/babel-loader/lib/index.js","mtime":1642114938312},{"path":"/home/dc/Documents/BP/vue-bp-web/node_modules/cache-loader/dist/cjs.js","mtime":1642114936856},{"path":"/home/dc/Documents/BP/vue-bp-web/node_modules/vue-loader/lib/index.js","mtime":1642114938760}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcC5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBUYXNrRGF0YVNlcnZpY2UgZnJvbSAiLi4vc2VydmljZXMvdGFza0RhdGFTZXJ2aWNlIjsKZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBtZXNzYWdlOiAiIiwKICAgICAgc3VjY2VzczogZmFsc2UsCiAgICAgIGluZm9NZXNzYWdlOiBmYWxzZSwKICAgICAgY3VycmVudElkOiAtMSwKICAgICAgLy8gd2hpY2ggdGFzayB3YXMgc2VsZWN0ZWQgdG8gbW9kaWZ5IG9yIGRlbGV0ZSBmcm9tIHRoZSB0YWJsZQogICAgICBkZWxldGVEaWFsb2c6IGZhbHNlLAogICAgICAvLyBzaG93ICdBcmUgeW91IHN1cmUnIGRpYWxvZyBmb3IgZGVsZXRpb24KICAgICAgc2VhcmNoOiAiIiwKICAgICAgaGVhZGVyczogW3sKICAgICAgICB0ZXh0OiAiVGFzayBuYW1lIiwKICAgICAgICB2YWx1ZTogIm5hbWUiLAogICAgICAgIHdpZHRoOiAiNjBjaCIKICAgICAgfSwgewogICAgICAgIHRleHQ6ICJMYXN0IE1vZGlmaWVkIiwKICAgICAgICB2YWx1ZTogImxhc3RfbW9kIiwKICAgICAgICB3aWR0aDogIjUwY2giCiAgICAgIH0sIHsKICAgICAgICB0ZXh0OiAiTW9kaWZ5IiwKICAgICAgICB2YWx1ZTogIm1vZGlmeSIsCiAgICAgICAgYWxpZ246ICJjZW50ZXIiLAogICAgICAgIHNvcnRhYmxlOiBmYWxzZSwKICAgICAgICB3aWR0aDogIjEwY2giCiAgICAgIH0sIHsKICAgICAgICB0ZXh0OiAiRGVsZXRlIiwKICAgICAgICB2YWx1ZTogImRlbGV0ZSIsCiAgICAgICAgYWxpZ246ICJjZW50ZXIiLAogICAgICAgIHNvcnRhYmxlOiBmYWxzZSwKICAgICAgICB3aWR0aDogIjEwY2giCiAgICAgIH1dLAogICAgICB0YXNrczogW10KICAgIH07CiAgfSwKICBjb21wdXRlZDoge30sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHt9LAogIC8vIFRoaXMgZnVuY3Rpb24gcnVucyBiZWZvcmUgdGhlIFVJIGxvYWRzCiAgYmVmb3JlTW91bnQ6IGZ1bmN0aW9uIGJlZm9yZU1vdW50KCkgewogICAgLy8gTG9hZCB0YXNrcyBmcm9tIHRoZSBkYXRhYmFzZQogICAgdGhpcy5yZXRyaWV2ZVRhc2tzKCk7CiAgfSwKICBtZXRob2RzOiB7CiAgICAvLyBkZWxldGUgc2VsZWN0ZWQgdGFzawogICAgc2hvd0RlbGV0ZURpYWxvZzogZnVuY3Rpb24gc2hvd0RlbGV0ZURpYWxvZyhpdGVtKSB7CiAgICAgIHRoaXMuY3VycmVudElkID0gaXRlbS5pZDsKICAgICAgdGhpcy5kZWxldGVEaWFsb2cgPSB0cnVlOwogICAgfSwKICAgIGRlbGV0ZVRhc2s6IGZ1bmN0aW9uIGRlbGV0ZVRhc2soaWQpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIFRhc2tEYXRhU2VydmljZS5kZWxldGUoaWQpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIF90aGlzLiRzdG9yZS5kaXNwYXRjaCgnc2hvd01lc3NhZ2UnLCB7CiAgICAgICAgICBtZXNzYWdlOiByZXMuZGF0YS5tZXNzYWdlCiAgICAgICAgfSk7CgogICAgICAgIF90aGlzLnJldHJpZXZlVGFza3MoKTsKCiAgICAgICAgX3RoaXMuZGVsZXRlRGlhbG9nID0gZmFsc2U7CiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnIpIHsKICAgICAgICBfdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ3Nob3dNZXNzYWdlJywgewogICAgICAgICAgbWVzc2FnZTogZXJyLnJlc3Bvc25lLmRhdGEubWVzc2FnZQogICAgICAgIH0pOwoKICAgICAgICBfdGhpcy5tZXNzYWdlID0gZXJyLnJlc3BvbnNlLmRhdGEubWVzc2FnZTsKICAgICAgICBfdGhpcy5zdWNjZXNzID0gZmFsc2U7CiAgICAgICAgX3RoaXMuaW5mb01lc3NhZ2UgPSB0cnVlOwoKICAgICAgICBfdGhpcy5yZXRyaWV2ZVRhc2tzKCk7CgogICAgICAgIF90aGlzLmRlbGV0ZURpYWxvZyA9IGZhbHNlOwogICAgICB9KTsKICAgIH0sCiAgICAvLyBzZXR1cCBtYXBwaW5nIG9mIHRhc2tzCiAgICBnZXREaXNwbGF5VGFzazogZnVuY3Rpb24gZ2V0RGlzcGxheVRhc2sodGFzaykgewogICAgICByZXR1cm4gewogICAgICAgIGlkOiB0YXNrLmlkLAogICAgICAgIG5hbWU6IHRhc2submFtZSwKICAgICAgICBsYXN0X21vZDogdGFzay51cGRhdGVkQXQKICAgICAgfTsKICAgIH0sCiAgICAvLyBnZXQgdGFza3MgZnJvbSBkYXRhYmFzZQogICAgcmV0cmlldmVUYXNrczogZnVuY3Rpb24gcmV0cmlldmVUYXNrcygpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICBUYXNrRGF0YVNlcnZpY2UuZ2V0QWxsKCkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICBfdGhpczIudGFza3MgPSByZXNwb25zZS5kYXRhLm1hcChfdGhpczIuZ2V0RGlzcGxheVRhc2spOwogICAgICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlLmRhdGEpOwogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZSkgewogICAgICAgIGNvbnNvbGUubG9nKGUpOwogICAgICB9KTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["yourtasks.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <v-container \n        class=\"d-flex flex-column justify-start align-center mt-5 rounded-lg\">\n\n        <v-card elevation=\"0\" class=\"ml-0\">\n            <v-card-title class=\"d-flex flex-row justify-space-between align-center\">\n            <h3 class=\"t-t-color text-h5 pt-3 font-weight-medium\"> All your tasks </h3>\n            <v-spacer></v-spacer>\n            <v-spacer></v-spacer>\n            <v-spacer></v-spacer>\n            <v-text-field\n                v-model=\"search\"\n                append-icon=\"mdi-magnify\"\n                label=\"Search\"\n                single-line\n                hide-details\n            ></v-text-field>\n            </v-card-title>\n            \n            <v-data-table\n            :headers=\"headers\"\n            :items=\"tasks\"\n            :items-per-page=\"7\"\n            :search=\"search\"\n            width=\"80%\"\n        >\n             <template v-slot:item=\"row\">\n                <tr>\n                    <td>{{ row.item.name }}</td>\n                    <td>{{ getHumanReadableTimestamp(row.item.last_mod) }}</td>\n\n                    <td>\n                    <v-btn plain class=\"pa-1\" :ripple=\"false\" @click=\"modifyTask(row.item.id)\">\n                        <v-icon color=\"var(--main-text-color)\">\n                            mdi-pencil-outline\n                        </v-icon>\n                    </v-btn>\n                    </td>\n                    <td>\n                    <v-btn plain class=\"pa-0\" :ripple=\"false\" @click.stop=\"showDeleteDialog(row.item)\">\n                        <v-icon class=\"pa-0\" color=\"orange\">\n                            mdi-close-circle-outline\n                        </v-icon>\n                    </v-btn>\n                    </td>\n                </tr>\n            </template>\n\n        </v-data-table>\n\n        </v-card>\n\n        <!-- Display quick message for the user -->\n            <v-snackbar v-model=\"infoMessage\" :timeout=\"2500\" outlined :color=\"this.success ? 'green' : 'red'\" top>\n                <!-- text message -->\n                {{ message }}\n                <!-- close icon -->\n                <template v-slot:action=\"{ attrs }\">\n                    <v-btn plain v-bind=\"attrs\" @click=\"infoMessage = false\">\n                        <v-icon>mdi-close</v-icon>\n                    </v-btn>\n                </template>\n            </v-snackbar>\n        <!-- Display quick message for the user -->\n\n        <v-dialog v-model=\"deleteDialog\" width=\"325\">\n            <v-card>\n                <v-card-title class=\"text-h5 lighten-2\"> Delete task? </v-card-title>\n\n                <v-card-text> Are you sure you want to delete this task? </v-card-text>\n\n                <v-divider></v-divider>\n\n                <v-card-actions>\n                    <v-spacer></v-spacer>\n                    <v-btn color=\"black\" text @click=\"deleteDialog = false\"> Cancel </v-btn>\n                    <v-btn color=\"red\" text @click=\"deleteTask(currentId)\"> Delete </v-btn>\n                </v-card-actions>\n                \n            </v-card>\n        </v-dialog>\n\n    </v-container>\n</template>\n\n<script>\n    import TaskDataService from \"../services/taskDataService\";\n\n    export default {\n        data() {\n            return { \n                message: \"\",\n                success: false,\n                infoMessage: false,\n\n                currentId: -1, // which task was selected to modify or delete from the table\n\n                deleteDialog: false, // show 'Are you sure' dialog for deletion\n                search: \"\",\n                headers: [\n                    {text: \"Task name\", value: \"name\", width: \"60ch\"},\n                    {text: \"Last Modified\", value: \"last_mod\", width: \"50ch\"},\n                    {text: \"Modify\", value: \"modify\", align: \"center\", sortable: false, width: \"10ch\"},\n                    {text: \"Delete\", value: \"delete\", align: \"center\", sortable: false, width: \"10ch\"},\n                ],\n                tasks: [ ]\n            };\n        },\n\n        computed: { },\n\n        created() { },\n\n        // This function runs before the UI loads\n        beforeMount() {\n            // Load tasks from the database\n            this.retrieveTasks();\n        },\n\n        methods: { \n            // delete selected task\n            showDeleteDialog(item) {\n                this.currentId = item.id;\n                this.deleteDialog = true;\n            },\n            deleteTask(id) {\n                TaskDataService.delete(id)\n                .then((res) => {\n                    this.$store.dispatch('showMessage', {message: res.data.message });\n                    this.retrieveTasks();\n                    this.deleteDialog = false;\n                })\n                .catch((err) => {\n                    this.$store.dispatch('showMessage', {message: err.resposne.data.message });\n                    this.message = err.response.data.message;\n                    this.success = false;\n                    this.infoMessage = true;\n                    this.retrieveTasks();\n                    this.deleteDialog = false;\n                })\n            },\n\n            // setup mapping of tasks\n            getDisplayTask(task) {\n                return {\n                    id: task.id,\n                    name: task.name,\n                    last_mod: task.updatedAt\n                };\n            },\n            // get tasks from database\n            retrieveTasks() {\n              TaskDataService.getAll()\n                .then((response) => {\n                  this.tasks = response.data.map(this.getDisplayTask);\n                  console.log(response.data);\n                })\n                .catch((e) => {\n                  console.log(e);\n                });\n            },\n        },\n    }\n</script>\n\n<style>\n    .b-g {\n        background-color: var(--green-background-color);\n        height: 90%;\n    }\n    .r-g {\n        height: 90%;\n    }\n    .h-g {\n        border: solid 2px hotpink;\n    }\n\n    [text-narrow] {\n        line-height: 1.1 !important;\n        font-size: 1rem;\n    }\n\n    .pointer {\n        cursor: pointer !important;\n    }\n</style>"],"sourceRoot":"src/components"}]}