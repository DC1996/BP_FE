{"remainingRequest":"/home/dc/Documents/BP/vue-bp-web/node_modules/babel-loader/lib/index.js!/home/dc/Documents/BP/vue-bp-web/node_modules/eslint-loader/index.js??ref--14-0!/home/dc/Documents/BP/vue-bp-web/src/myfiles/extractorModule.js","dependencies":[{"path":"/home/dc/Documents/BP/vue-bp-web/src/myfiles/extractorModule.js","mtime":1647291705957},{"path":"/home/dc/Documents/BP/vue-bp-web/babel.config.js","mtime":1646999302412},{"path":"/home/dc/Documents/BP/vue-bp-web/node_modules/cache-loader/dist/cjs.js","mtime":1642114936856},{"path":"/home/dc/Documents/BP/vue-bp-web/node_modules/babel-loader/lib/index.js","mtime":1642114938312},{"path":"/home/dc/Documents/BP/vue-bp-web/node_modules/eslint-loader/index.js","mtime":1642114937120}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/dc/Documents/BP/vue-bp-web/src/myfiles/extractorModule.js"],"names":["Token","answerInfo","variableInfo","Task","Question","Variable","Answer","Extractor","task","task_text","questions","parsedVariables","addedVariables","parsedAnswers","tokens","variables","forEach","variable","added","visible","token","variable_name","value","find","parsedVar","name","push","answer_name","answer","answers","parsedAns","addUniqueVars","filter","type","types","addUniqueAnswers","text","concat","question","length","definition","trim","correct","i","incorrect","console","log","range","start","end","step"],"mappings":"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","sourcesContent":["import { Token } from \"./tokenizer\";\nimport {\n  answerInfo,\n  variableInfo,\n  Task,\n  Question,\n  Variable,\n  Answer,\n} from \"./taskHandler\";\n\n/*\n  Class used to export data about variables \n  and generate math markup language code\n*/\nexport class Extractor {\n  constructor() {\n    this.task = new Task();\n\n    this.task_text = \"\";\n    this.questions = [];\n\n    this.parsedVariables = [];\n    this.addedVariables = [];\n\n    this.parsedAnswers = [];\n  }\n\n  // Save parsed variables\n  addUniqueVars(tokens) {\n    // Assume list of variables has changed\n    // and set visiblity to false for all variables\n    this.task.variables.forEach((variable) => {\n      if (variable.added == false) {\n        variable.visible = false;\n      }\n    });\n\n    tokens.forEach((token) => {\n      let variable_name = token.value;\n\n      let variable = this.task.variables.find(\n        (parsedVar) => parsedVar.name == variable_name\n      );\n      // Add all variables that aren't in the list already\n      if (!variable) {\n        variable = new Variable(variable_name);\n        this.task.variables.push(variable);\n      } else {\n        // Set visiblity for parsed variables\n        variable.visible = true;\n      }\n    });\n  }\n\n  // Save parsed answers\n  addUniqueAnswers(tokens) {\n    tokens.forEach((token) => {\n      let answer_name = token.value;\n\n      let answer = this.task.answers.find(\n        (parsedAns) => parsedAns.name == answer_name\n      );\n      // Add all answers that aren't in the list already\n      if (!answer) {\n        answer = new Answer(answer_name);\n        this.task.answers.push(answer);\n      } else {\n        // Set visiblity for parsed answers\n        answer.visible = true;\n      }\n    });\n  }\n\n  // Extract variables from token stream\n  extractVariables(tokens) {\n    // Filter variables from tokens and add only once\n    this.addUniqueVars(\n      tokens.filter((token) => token.type == Token.types.variable)\n    );\n\n    return this.task.variables;\n  }\n\n  // Extract answers from token stream\n  extractAnswers(tokens) {\n    // Filter answers from tokens and add only once\n    this.addUniqueAnswers(\n      tokens.filter((token) => token.type == Token.types.answer)\n    );\n\n    return this.task.answers;\n  }\n\n  generateText() {\n    let text = \"\";\n\n    /* TEXT */\n    // Add task text\n    text = text.concat(\"#text \\n\", this.task.text, \"\\n\\n\");\n\n    /* QUESTIONS */\n    // Add questions\n    this.task.questions.forEach((question) => {\n      text = text.concat(\"#question \\n\", question.text, \"\\n\\n\");\n    });\n    if (this.task.questions.length == 0) {\n      text = text.concat(\"#question \\n\\n\");\n    }\n\n    /* DEFINITIONS */\n    // Add definitions of parsed variables from given text and questions\n    text = text.concat(\"#definitions \\n\");\n    this.task.variables.forEach((variable) => {\n      // Variable is up-to-date and could have been set by the user\n      if (variable.visible) {\n        // Definitions contains valid characters\n        if (variable.definition.trim() != \"\") {\n          // Add full defintion\n          text = text.concat(variable.name, \" = \", variable.definition, \"\\n\");\n        } else {\n          // Add declaration only\n          text = text.concat(variable.name, \"\\n\");\n        }\n      }\n    });\n\n    // Add correct option(s) for each answer\n    this.task.answers.forEach((answer) => {\n      // Answer is up-to-date and could ave been set by the user\n      if (answer.visible) {\n        text = text.concat(answer.name, \".correct = [ \\n\");\n        answer.correct.forEach((correct, i) => {\n          if (i > 0) {\n            text = text.concat(\", \\n\");\n          }\n\n          text = text.concat(correct);\n        });\n        text = text.concat(\"\\n ] \\n\");\n      }\n    });\n\n    // Add incorrect option(s) for each answer\n    this.task.answers.forEach((answer) => {\n      // Answer is up-to-date and could ave been set by the user\n      if (answer.visible) {\n        text = text.concat(answer.name, \".incorrect = [ \\n\");\n        answer.incorrect.forEach((incorrect, i) => {\n          if (i > 0) {\n            text = text.concat(\", \\n\");\n          }\n\n          text = text.concat(incorrect);\n        });\n        text = text.concat(\"\\n ] \\n\");\n      }\n    });\n\n    /* RANGES */\n    // Add ranges for variables\n    // Add definitions of parsed variables\n    text = text.concat(\"\\n#ranges \\n\");\n    this.task.variables.forEach((variable) => {\n      console.log(\"NAME\", variable.name);\n\n      // Variable is up-to-date and could have been set by the user\n      if (variable.visible) {\n        // Variable can produce a valid range string\n        if (\n          variable.range.start != \"\" &&\n          variable.range.end != \"\" &&\n          variable.range.step != \"\"\n        ) {\n          // Add range defintion\n          text = text.concat(\n            variable.name,\n            \" = range(\",\n            variable.range.start,\n            \",\",\n            variable.range.end,\n            \",\",\n            variable.range.step,\n            \")\\n\"\n          );\n        }\n      }\n    });\n\n    this.task.answers.forEach((answer) => {\n      console.log(\"NAME\", answer.name);\n\n      // Answer is up-to-date and could have been set by the user\n      if (answer.visible) {\n        // Answer can produce a valid range string\n        if (answer.range.start != \"\" && answer.range.end != \"\") {\n          // Add range defintion\n          text = text.concat(\n            answer.name,\n            \" = range(\",\n            answer.range.start,\n            \",\",\n            answer.range.end,\n            \",1)\\n\"\n          );\n        }\n      }\n    });\n\n    text = text.concat(\"\\n\\n\");\n\n    console.log(text); // logging\n\n    return text;\n  }\n}\n"]}]}