{"remainingRequest":"/home/dc/Documents/BP/vue-bp-web/node_modules/babel-loader/lib/index.js!/home/dc/Documents/BP/vue-bp-web/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/dc/Documents/BP/vue-bp-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dc/Documents/BP/vue-bp-web/src/components/createtaskpage.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dc/Documents/BP/vue-bp-web/src/components/createtaskpage.vue","mtime":1645084162947},{"path":"/home/dc/Documents/BP/vue-bp-web/babel.config.js","mtime":1642185636988},{"path":"/home/dc/Documents/BP/vue-bp-web/node_modules/cache-loader/dist/cjs.js","mtime":1642114936856},{"path":"/home/dc/Documents/BP/vue-bp-web/node_modules/babel-loader/lib/index.js","mtime":1642114938312},{"path":"/home/dc/Documents/BP/vue-bp-web/node_modules/cache-loader/dist/cjs.js","mtime":1642114936856},{"path":"/home/dc/Documents/BP/vue-bp-web/node_modules/vue-loader/lib/index.js","mtime":1642114938760}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["createtaskpage.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <v-container \n        class=\"d-flex flex-column justify-start align-center mt-10 b-g rounded-lg\">\n        \n        <h4 class=\"t-t-color text-h5 my-4 font-weight-medium\" contenteditable spellcheck=\"false\" @blur=\"setName\" > {{ this.name }} </h4>\n\n        <v-container fluid rounded label=\"Task\" class=\"d-flex flex-row\">\n            <v-col cols=\"16\" class=\"mx-2 pa-0 ma-0\">\n                <v-textarea text-narrow\n                    id=\"task-text\" class=\"text-caption\"\n                    v-model=\"text\" solo no-resize rows=\"20\">\n                </v-textarea>\n            <div>\n                <v-btn class=\"mx-1\" @click=\"parseText\">Parse</v-btn>\n                <v-btn class=\"mx-1\" @click=\"previewTask\">Preview</v-btn>\n                <v-btn class=\"mx-1\" @click=\"saveText\">Save</v-btn>\n                <v-btn class=\"mx-1\" @click=\"restoreText\">Restore</v-btn>\n            </div>\n\n            <v-overlay :value=\"taskOverlay\" >\n                    <v-sheet \n                        elevation=\"4\" width=\"600\" \n                        class=\"pa-4 ma-2 d-flex flex-column justify-flex-start align-flex-start rounded-lg\"\n                    >\n\n                    <h3>Task text: {{ task_text }}</h3>\n                    <div class=\"d-flex flex-column ma-2 pa-1\" v-for=\"(q, i) in questions\" :key=\"q\">\n                        <h4 class=\"ma-1\"> Question: {{ q.text }} </h4>\n                        <div class=\"ma-1 pa-1\" v-if=\"q.text.includes(answers[i].name)\">\n                            <p v-for=\"(item, index) in answers[i].correct_values\" :key=\"index\" >{{item}}</p>\n                            <p v-for=\"(item, index) in answers[i].incorrect_values\" :key=\"index\" >{{item}}</p>\n                        </div>\n                    </div>\n\n                    <v-btn @click=\"taskOverlay = false\">Close</v-btn>\n                    </v-sheet>\n            </v-overlay>\n\n            </v-col>\n            <v-col cols=\"16\" class=\"mx-2\">\n                <h4> Variables </h4>\n                        <div class=\"d-flex flex-row align-center\">\n                            <div v-for=\"(variable, i) in variables\" :key=\"i\">\n                                <v-chip   \n                                    v-if=\"variable.visible\"\n                                    @click=\"variableInfo(i)\"\n                                    color=\"primary\"\n                                    class=\"mx-2 my-1 px-6 py-4 pointer elevation-1\">\n                                    {{ variable.name.substr(1) }}\n                                </v-chip>\n                            </div>\n                            <div>\n                                <v-chip \n                                    @click=\"addVariable()\"\n                                    color=\"secondary\"\n                                    class=\"mx-2 my-1 px-6 py-4 pointer elevation-2\">\n                                    + Add variable\n                                </v-chip>\n                            </div>\n                        </div>\n                        <v-overlay \n                            :value=\"overlayV\" v-if=\"variables.length != 0\">\n                            <v-sheet \n                                elevation=\"4\" width=\"500\" \n                                class=\"pa-4 ma-2 d-flex flex-column justify-flex-start align-flex-start rounded-lg\"\n                            >\n                                <h2 class=\"ma-2\"> {{ variables[indexV].name }} </h2>\n                                <p class=\"ma-2\"> Definition </p>\n                                <v-text-field label=\"\" v-model=\"variables[indexV].definition\" outlined class=\"shrink mx-2\" style=\"width:220px\"> {{ variables[indexV].definition }} </v-text-field>\n                                <p class=\"ml-2\"> Range {{ variables[indexV].testRange.fullRange() }} </p>\n                                <v-row class=\"px-3\">\n                                    <v-text-field label=\"Start\" v-model=\"variables[indexV].testRange.start\" outlined class=\"shrink mx-2 mt-3\" style=\"width:80px\">\n                                        \n                                    </v-text-field>\n                                    <v-text-field label=\"End\"  v-model=\"variables[indexV].testRange.end\" outlined class=\"shrink mx-2 mt-3\" style=\"width:80px\">\n                                        \n                                    </v-text-field>\n                                    <v-text-field label=\"Step\" v-model=\"variables[indexV].testRange.step\" outlined class=\"shrink mx-2 mt-3\" style=\"width:80px\">\n                                        \n                                    </v-text-field>\n                                </v-row>\n\n                                <!-- <p class=\"ma-2\"> ( Value: {{ variables[indexV].value }} ) </p> -->\n                                <v-btn class=\"my-1\" @click=\"overlayV = false\">Close</v-btn>\n                            </v-sheet>\n                        </v-overlay>\n\n                <h4>Questions</h4>\n                <v-sheet \n                    v-for=\"question in questions\" :key=\"question\" \n                    class=\"d-flex flex-row align-center ma-1 pa-1\"\n                    width=\"50%\"\n                    elevation=\"3\"\n                    rounded\n                >\n                    <v-tooltip top >\n                        <template #activator=\"{on}\">\n                            <v-chip v-on=\"on\" label=\"text\" class=\"mx-1\"> {{ question.text }} </v-chip>\n                        </template>\n                        <span>Text</span>\n                    </v-tooltip>\n                </v-sheet>\n                <h5>Answers</h5>\n                    <v-chip\n                        v-for=\"(answer, i) in answers\" :key=\"i\"\n                        @click=\"answerInfo(i)\"\n                        :elevation=\"6\" color=\"primary\"\n                        class=\"mx-2 my-1 px-6 py-4 pointer\">\n                        {{ answer.name.substr(1) }}\n                    </v-chip>\n                    <v-overlay \n                        :value=\"overlayA\" v-if=\"answers.length != 0\">\n                        <v-sheet \n                            elevation=\"4\" width=\"250\" \n                            class=\"pa-4 ma-2 d-flex flex-column justify-flex-start align-flex-start rounded-lg\"\n                        >\n                            <h4 class=\"ma-2\"> {{ answers[indexA].name }} </h4>\n                            <p class=\"ma-2\" v-for=\"correct in answers[indexA].correct\" :key=\"correct\"> \n                                Correct: {{ correct }} \n                            </p>\n                            <p class=\"ma-2\" v-for=\"incorrect in answers[indexA].incorrect\" :key=\"incorrect\"> \n                                Incorrect: {{ incorrect }} \n                            </p>\n                            <v-btn @click=\"overlayA = false\">Close</v-btn>\n                        </v-sheet>\n                    </v-overlay>\n            </v-col>\n\n            <!-- Display quick message for the user -->\n            <v-snackbar v-model=\"infoMessage\" :timeout=\"2500\" outlined :color=\"this.success ? 'green' : 'red'\" top>\n                <!-- text message -->\n                {{ message }}\n                <!-- close icon -->\n                <template v-slot:action=\"{ attrs }\">\n                    <v-btn plain v-bind=\"attrs\" @click=\"infoMessage = false\">\n                        <v-icon>mdi-close</v-icon>\n                    </v-btn>\n                </template>\n            </v-snackbar>\n            <!-- Display quick message for the user -->\n\n        </v-container>\n\n    </v-container>\n</template>\n\n<script>\n    import { tokenize } from \"../myfiles/tokenizer\"\n    import { parseMathMarkup, taskQuestion, variableInfo } from \"../myfiles/taskHandler\"\n    import { randomInt, evaluate } from \"mathjs\";\n    import { Extractor } from \"../myfiles/extractorModule\";\n\n    import TaskDataService from \"../services/taskDataService\";\n\n    export default {\n        data() {\n            return {\n                message: \"\",\n                success: false,\n                infoMessage: false,\n                \n                name: \"New Task\",\n                text: \"\",\n                task_text: \"\",\n\n                ext_text: new Extractor(),\n                \n                variables: [],\n                questions: [],\n                answers: [],\n\n                overlayV: false,\n                overlayA: false,\n                taskOverlay: false,\n                indexV: 0,\n                indexA: 0,\n            };\n        },\n        computed: {\n            getText() { return this.text; }\n        },\n\n        // Load task depending on navigation origin\n        beforeMount() {\n            console.log(\"taskId from route params\", localStorage.getItem('taskId'))\n\n            // Modify was selected from task history\n            if( this.$route.params.taskId ) \n            {\n                // Save id to localStorage, so we can reload page without lossing the id\n                localStorage.setItem('taskId', this.$route.params.taskId)\n            }\n\n            // Id was saved from route params or if the page was reloaded\n            if ( localStorage.getItem('taskId') )\n            {\n                // Load the task content from the database\n                TaskDataService.get(localStorage.getItem('taskId'))\n                    .then((res) => {\n                        this.name = res.data.name\n                        this.text = res.data.content\n                    })\n                    .catch((err) => {\n                        console.log(\"ERROR\", err.response.data.message)\n                    })\n            }\n        },\n\n        created() {\n            window.addEventListener('beforeunload', function(event) {\n                event.returnValue = 'Write something'\n                alert(\"wait\")\n            })\n        },\n\n        methods: {\n            setName(e) {\n                this.name = e.target.innerText\n                console.log(\"NAME\",this.name)\n            },\n\n            testext() {\n                // Test extraction\n                this.ext_text.extractVariable(tokenize(this.text));\n            },\n\n            createNewTask() \n            {\n                // Prepare data for sending\n                var data = { name: this.name, content: this.text };\n\n                if ( localStorage.getItem('taskId') == null) {\n\n                // Send data to database\n                TaskDataService.create(data)\n                    .then((res) => { \n                        console.log(res); \n                        this.message = \"Task saved successfuly.\"\n                        this.success = true;\n                        this.infoMessage = true;\n                        localStorage.setItem('taskId', res.data.id)\n                    })\n                    .catch((err) => { \n                        console.log(err);\n                        //this.message = \"Error while saving task.\"\n                        this.message = err.reposnse.data.message\n                        this.success = false\n                        this.infoMessage = true\n                     });\n                }\n                else {\n                    TaskDataService.update( localStorage.getItem('taskId'), data ) \n                        .then((res) => {\n                            console.log(res);\n                            this.message = res.data.message\n                            this.success = true;\n                            this.infoMessage = true;\n                        })\n                        .catch((err) => {\n                            this.message = err.reposnse.data.message\n                            this.success = false\n                            this.infoMessage = true\n                        })\n                }\n            },\n\n            variableInfo : function(i) {\n                this.indexV = i\n                this.overlayV = true\n            },\n            answerInfo: function(i) {\n                this.indexA = i\n                this.overlayA = true\n            },\n            previewTask : function () {\n                this.taskOverlay = true\n\n                localStorage.setItem('data', this.text)\n            },\n            saveText: function() {\n                localStorage.setItem('data', this.text)\n\n                this.createNewTask()\n            },\n            restoreText: function() {\n                this.text = localStorage.getItem('data')\n            },\n            parseText : function () {\n\n                // Tokenize\n                console.log( tokenize( this.text ) )\n\n                // parse text\n                var parsedData = parseMathMarkup( this.text )\n\n                // print out the tokenized string from the textarea\n                console.log( parsedData );\n\n                // clear arrays\n                this.variables = []\n                this.questions = []\n                this.answers = []\n                this.task_text = \"\"\n\n                let tokens = tokenize(this.text);\n                this.variables = this.ext_text.extractVariables(tokens);\n\n\n                /*this.task_text = parsedData.get('task-text') // save task text\n                console.log(\"TADAAAA\",this.task_text)\n\n                // save variables and questions\n                for (let [_, value] of parsedData.entries() ) \n                {\n                    console.log(_)\n                    if ( value instanceof variableInfo ) this.variables.push(value)\n                    if ( value instanceof taskQuestion ) this.questions.push(value)\n                }\n\n                // extract answers\n                for (let question of this.questions) \n                {\n                    for (let [_, value] of question.answers.entries() )\n                    {\n                       console.log(_)\n                       this.answers.push(value)\n                    }\n                }\n\n                // -------------------------------------------------\n                // For all variables, compute range if range != \"\"\n                for ( let v of this.variables ) \n                {\n                    //v.testRange.setFullRange(v.range);\n\n                    if ( v.range.length != 0 )\n                    {\n                        let [start, end, step] = v.range.substring(1, v.range.length-1).split(',')\n                        console.log(start, end , step)\n                        \n                        // Get actual value\n                        v.value = randomInt(parseInt(start), parseInt(end)).toString()\n                    }\n                    else\n                    {\n                        v.value = v.definition;\n                    }\n\n                    this.task_text = this.task_text.replace(v.name, v.value)\n\n                    // For each answer replace value\n                    for (let a of this.answers)\n                    {\n                        // Replace in correct\n                        a.correct.forEach((ans, ind) => {\n                            a.correct[ind] = ans.replace(v.name, v.value)                            \n                        });\n\n                        // Replace in incorrect\n                        a.incorrect.forEach((ans, ind) => {\n                            a.incorrect[ind] = ans.replace(v.name, v.value);\n                        });\n                    }\n                }\n\n                // Get final result\n                for(let a of this.answers) \n                {\n                    // Evaluate expressions\n                    a.correct.forEach(expr => { a.correct_values.push( evaluate(expr) ) });\n                    a.incorrect.forEach(expr => { a.incorrect_values.push( evaluate(expr) ) });\n                }\n\n                console.log(\"VARS\", this.variables)\n                console.log(\"QSTN\", this.questions)\n                console.log(\"ANSW\", this.answers) */\n            }     \n        }\n    }\n</script>\n\n<style>\n    .b-g {\n        background-color: var(--green-background-color);\n        height: 90%;\n    }\n    .r-g {\n        height: 90%;\n    }\n    .h-g {\n        border: solid 2px hotpink;\n    }\n\n    [text-narrow] {\n        line-height: 1.1 !important;\n        font-size: 1rem;\n    }\n\n    .message-red {\n        border: 1px solid red;\n    }\n    .message-green {\n        border: 1px solid green;\n    }\n\n    .pointer {\n        cursor: pointer !important;\n    }\n</style>"],"sourceRoot":"src/components"}]}