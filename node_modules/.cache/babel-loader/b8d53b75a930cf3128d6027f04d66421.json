{"remainingRequest":"/home/dc/Documents/BP/vue-bp-web/node_modules/babel-loader/lib/index.js!/home/dc/Documents/BP/vue-bp-web/node_modules/eslint-loader/index.js??ref--14-0!/home/dc/Documents/BP/vue-bp-web/src/store/testData.module.js","dependencies":[{"path":"/home/dc/Documents/BP/vue-bp-web/src/store/testData.module.js","mtime":1648730349818},{"path":"/home/dc/Documents/BP/vue-bp-web/babel.config.js","mtime":1646999302412},{"path":"/home/dc/Documents/BP/vue-bp-web/node_modules/cache-loader/dist/cjs.js","mtime":1642114936856},{"path":"/home/dc/Documents/BP/vue-bp-web/node_modules/babel-loader/lib/index.js","mtime":1642114938312},{"path":"/home/dc/Documents/BP/vue-bp-web/node_modules/eslint-loader/index.js","mtime":1642114937120}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/dc/Documents/BP/vue-bp-web/src/store/testData.module.js"],"names":["parseMathLang","categoryDataService","GeneratorService","TaskDataService","TestDataService","namespaced","state","id","name","grade","grades","tasks","concreteTasks","taskCategories","answerOptions","selectedTasks","selectedTaskCategories","selectedAnswerOptions","stepCounter","mutations","START_TEST_CREATION","payload","categories","START_TEST_MODIFICATION","MOVE_TO_NEXT_STEP","value","MOVE_TO_PREV_STEP","SET_GRADE","SET_SELECTED_CATEGORY","push","category","REMOVE_SELECTED_CATEGORY","splice","categoryIndex","SET_SELECTED_TASK","task","REMOVE_SELECTED_TASK","taskIndex","GET_TASKS","SET_CONCRETE_TASK","concreteTask","REMOVE_CONCRETE_TASK","concreteTaskIndex","actions","startTestCreation","context","getAll","then","data","map","commit","startTestModification","get","testId","test","testData","content","renderOption","testTasks","moveToNextStep","moveToPrevStep","setGrade","setSelectedCategory","findIndex","setSelectedTask","taskId","generate","response","removeConcreteTask","getTasks","Array","length","fill","getters","isCategorySelected","selected_id","find","undefined","isTaskSelected"],"mappings":"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","sourcesContent":["import { parseMathLang } from \"../myfiles/taskHandler\";\nimport categoryDataService from \"../services/categoryDataService\";\nimport GeneratorService from \"../services/generatorService\";\nimport TaskDataService from \"../services/taskDataService\";\nimport TestDataService from \"../services/testDataService\";\n\nexport default {\n  namespaced: true,\n  // Data section\n  state: {\n    id: 0,\n    name: \"\",\n\n    grade: \"0\",\n    grades: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"],\n\n    tasks: [],\n    concreteTasks: [],\n    taskCategories: [],\n    answerOptions: [\"text\", \"radio\", \"select\", \"checkbox\"],\n\n    selectedTasks: [],\n    selectedTaskCategories: [],\n    selectedAnswerOptions: [],\n\n    stepCounter: 1,\n  },\n\n  // Internal state changers\n  mutations: {\n    START_TEST_CREATION(state, payload) {\n      state.name = \"New test\";\n      state.grade = \"0\";\n      state.categories = payload.categories;\n      state.tasks = [];\n      state.selectedTasks = [];\n      state.concreteTasks = [];\n      state.selectedTaskCategories = [];\n      state.answerOptions = [];\n      state.stepCounter = 1;\n    },\n    START_TEST_MODIFICATION(state, payload) {\n      state.id = payload.id;\n      state.name = payload.name;\n      state.grade = payload.grade;\n      state.tasks = payload.tasks;\n      state.categories = payload.categories;\n      state.stepCounter = 4;\n    },\n\n    MOVE_TO_NEXT_STEP(state, payload) {\n      state.stepCounter = payload.value;\n    },\n    MOVE_TO_PREV_STEP(state, payload) {\n      state.stepCounter = payload.value;\n    },\n\n    SET_GRADE(state, payload) {\n      state.grade = payload.value;\n    },\n\n    SET_SELECTED_CATEGORY(state, payload) {\n      state.selectedTaskCategories.push(payload.category);\n    },\n\n    REMOVE_SELECTED_CATEGORY(state, payload) {\n      state.selectedTaskCategories.splice(payload.categoryIndex, 1);\n    },\n\n    SET_SELECTED_TASK(state, payload) {\n      state.selectedTasks.push(payload.task);\n    },\n\n    REMOVE_SELECTED_TASK(state, payload) {\n      state.selectedTasks.splice(payload.taskIndex, 1);\n    },\n\n    GET_TASKS(state, payload) {\n      state.tasks = payload.tasks;\n      state.answerOptions = payload.answerOptions;\n    },\n\n    SET_CONCRETE_TASK(state, payload) {\n      state.concreteTasks.push(payload.concreteTask);\n    },\n\n    REMOVE_CONCRETE_TASK(state, payload) {\n      state.concreteTasks.splice(payload.concreteTaskIndex);\n    },\n  },\n\n  // Events, event handlers\n  actions: {\n    startTestCreation(context) {\n      categoryDataService.getAll().then((categories) => {\n        let payload = {\n          categories: categories.data.map((category) => {\n            return {\n              id: category.id,\n              name: category.name,\n            };\n          }),\n        };\n        context.commit(\"START_TEST_CREATION\", payload);\n      });\n    },\n\n    // Modify was clicked from the Your tests table\n    async startTestModification(context, payload) {\n      // Fetch test from database\n      let test = await TestDataService.get(payload.testId);\n      let categories = await categoryDataService.getAll();\n      // Prepare test data\n      let testData = {\n        id: test.data.id,\n        name: test.data.name,\n        grade: test.data.grade,\n        // Set task properties\n        tasks: test.data.tasks.map((task) => {\n          return {\n            id: task.id,\n            name: task.name,\n            content: task.content,\n            renderOption: task.testTasks.renderOption,\n          };\n        }),\n        // Set categories\n        categories: categories.map((category) => {\n          return {\n            id: category.id,\n            name: category.name,\n          };\n        }),\n      };\n      // Set test data\n      context.commit(\"START_TEST_MODIFICATION\", testData);\n    },\n\n    // Move to next step\n    moveToNextStep(context) {\n      let stepCounter = context.state.stepCounter + 1;\n      context.commit(\"MOVE_TO_NEXT_STEP\", { value: stepCounter });\n    },\n\n    // Move to next step\n    moveToPrevStep(context) {\n      let stepCounter =\n        context.state.stepCounter == 1 ? 1 : context.state.stepCounter - 1;\n      context.commit(\"MOVE_TO_NEXT_STEP\", { value: stepCounter });\n    },\n\n    // Set selected grade\n    setGrade(context, payload) {\n      let grade = context.state.grade == payload.value ? \"0\" : payload.value;\n      context.commit(\"SET_GRADE\", { value: grade });\n    },\n\n    // Set selected category\n    setSelectedCategory(context, payload) {\n      let categories = context.state.selectedTaskCategories;\n      // Check if category is already selected\n      let categoryIndex = categories.findIndex(\n        ({ id }) => payload.category.id === id\n      );\n      if (categoryIndex == -1) {\n        // ahoj laska, pridaj kategoriu do zvolenych\n        context.commit(\"SET_SELECTED_CATEGORY\", payload);\n      } else {\n        // Remove category from selected task categories\n        context.commit(\"REMOVE_SELECTED_CATEGORY\", { categoryIndex });\n      }\n    },\n\n    // Set selected task for test\n    async setSelectedTask(context, payload) {\n      let tasks = context.state.selectedTasks;\n\n      let taskId = payload.task.id;\n      let taskIndex = tasks.findIndex(({ id }) => taskId === id);\n\n      if (taskIndex == -1) {\n        // Save selected abstractTask\n        context.commit(\"SET_SELECTED_TASK\", payload);\n\n        // Get generated concrete task for better preview\n        GeneratorService.generate({\n          content: parseMathLang(payload.task.content),\n        }).then((response) => {\n          let payload = {\n            concreteTask: {\n              id: taskId,\n              content: response.data.content,\n              renderOption: \"text\",\n            },\n          };\n          // Save conrete task to array\n          context.commit(\"SET_CONCRETE_TASK\", payload);\n        });\n      } else {\n        context.commit(\"REMOVE_SELECTED_TASK\", { taskIndex });\n        let concreteTasks = context.state.concreteTasks;\n\n        let concreteTaskIndex = concreteTasks.findIndex(\n          ({ id }) => payload.task.id === id\n        );\n        context.commit(\"REMOVE_CONCRETE_TASK\", { concreteTaskIndex });\n      }\n    },\n\n    removeConcreteTask(context, payload) {\n      context.commit(\"REMOVE_CONCRETE_TASK\", payload);\n    },\n\n    // Load task from database by category\n    async getTasks(context, payload) {\n      TaskDataService.getAll().then((response) => {\n        let payload = {\n          // Map task properties\n          tasks: response.data.map((task) => {\n            return {\n              id: task.id,\n              name: task.name,\n              content: task.content,\n              renderOption: \"text\", // set default render option\n            };\n          }),\n          // Initialize array for setting render options\n          answerOptions: new Array(response.data.length).fill(\"text\"),\n        };\n\n        context.commit(\"GET_TASKS\", payload);\n      });\n    },\n  },\n  // Outputs\n  getters: {\n    isCategorySelected: (state) => (selected_id) => {\n      return (\n        state.selectedTaskCategories.find(({ id }) => id === selected_id) !=\n        undefined\n      );\n    },\n\n    isTaskSelected: (state) => (selected_id) => {\n      return (\n        state.selectedTasks.find(({ id }) => id === selected_id) != undefined\n      );\n    },\n  },\n};\n"]}]}