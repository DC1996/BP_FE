{"remainingRequest":"/home/dc/Documents/BP/vue-bp-web/node_modules/babel-loader/lib/index.js!/home/dc/Documents/BP/vue-bp-web/node_modules/eslint-loader/index.js??ref--14-0!/home/dc/Documents/BP/vue-bp-web/src/myfiles/taskHandler.js","dependencies":[{"path":"/home/dc/Documents/BP/vue-bp-web/src/myfiles/taskHandler.js","mtime":1645079635683},{"path":"/home/dc/Documents/BP/vue-bp-web/babel.config.js","mtime":1642185636988},{"path":"/home/dc/Documents/BP/vue-bp-web/node_modules/cache-loader/dist/cjs.js","mtime":1642114936856},{"path":"/home/dc/Documents/BP/vue-bp-web/node_modules/babel-loader/lib/index.js","mtime":1642114938312},{"path":"/home/dc/Documents/BP/vue-bp-web/node_modules/eslint-loader/index.js","mtime":1642114937120}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/dc/Documents/BP/vue-bp-web/src/myfiles/taskHandler.js"],"names":["START","TEXT","VARIABLE","ANSWER","tokenize","FILENAME1","FILENAME2","QUESTION","DEFINITIONS","RANGES","SET_RANGE","CORRECT","INCORRECT","Range","start","end","step","fullRange","range","split","s","e","p","substring","slice","variableInfo","name","definition","value","testRange","visible","answerInfo","correct","incorrect","correct_values","incorrect_values","taskQuestion","text","answers","Map","parseMathMarkup","file_name","tokens","variables","set","c_name","q_num","PART","i","length","token","token2","type","toString","txt","get","q","undefined","info","ans","push","val","at"],"mappings":"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","sourcesContent":["// const tex = require('tex-math-parser');\n// import { parseTex, evaluateTex } from  // ES6 module\n\nimport { START, TEXT, VARIABLE, ANSWER, tokenize } from \"./tokenizer\";\n\nexport const FILENAME1 = \"test.txt\";\nexport const FILENAME2 = \"test4.txt\";\n\n//console.dir(tokenize(FILENAME1), {'maxArrayLength': null});\n\nexport const QUESTION = 2,\n  DEFINITIONS = 3,\n  RANGES = 4,\n  SET_RANGE = 6,\n  CORRECT = 7,\n  INCORRECT = 8;\n\nexport class Range {\n  constructor() {\n    this.start = \"\";\n    this.end = \"\";\n    this.step = \"\";\n    this.fullRange = function () {\n      return \"(\" + this.start + \",\" + this.end + \",\" + this.step + \")\";\n    };\n  }\n\n  getFullRange() {\n    return \"(\" + this.start + \",\" + this.end + \",\" + this.step + \")\";\n  }\n\n  setFullRange(range) {\n    let [s, e, p] = range.split(\",\", 3);\n    s = s.substring(1);\n    p = p.slice(0, -1);\n\n    this.start = s;\n    this.end = e;\n    this.step = p;\n  }\n\n  updateRange() {\n    this.fullRange = \"(\" + this.start + \",\" + this.end + \",\" + this.step + \")\";\n  }\n}\n\n// Class that represents the\n// variable type variable for tasks\nexport class variableInfo {\n  constructor(name) {\n    this.name = name;\n    this.definition = \"\";\n    this.range = \"\";\n\n    this.value = 0; // value\n\n    this.testRange = new Range();\n    this.visible = true;\n  }\n}\n\n// Class that represents the\n// answer type variable for tasks\nexport class answerInfo {\n  constructor(name) {\n    this.name = name;\n    this.correct = [];\n    this.incorrect = [];\n\n    // values\n    this.correct_values = [];\n    this.incorrect_values = [];\n  }\n}\n\n// Class that represents the\n// questions for a task\nexport class taskQuestion {\n  constructor() {\n    this.text = \"\";\n    this.answers = new Map();\n  }\n}\n\n// Class that represents the task\n// this will be saved in the database\n/* \nclass Task \n{\n    constructor() \n    {\n        this.task_text = \"\";\n        this.questions = []\n        this.variables = []\n    }\n} \n*/\n\n// Parses the markup language\nexport function parseMathMarkup(file_name) {\n  // First, tokenize the input file\n  let tokens = tokenize(file_name);\n\n  // Create variable where the new task\n  // will be saved\n  //current_task = new Task()\n\n  let variables = new Map();\n  variables.set(\"task-text\", \"\");\n  let c_name = \"\";\n  let q_num = 0;\n\n  var PART = START;\n\n  for (let i = 0; i < tokens.length; i++) {\n    let token = tokens[i];\n    let token2 = i + 1 == tokens.length ? tokens[i] : tokens[i + 1];\n\n    switch (PART) {\n      case START: {\n        if (token.type == \"keyword\" && token.value == \"#text\") {\n          PART = TEXT;\n          break;\n        }\n\n        if (token.type == \"keyword\" && token.value == \"#question\") {\n          PART = QUESTION;\n          q_num++;\n          variables.set(\"q\" + q_num.toString(), new taskQuestion());\n          break;\n        }\n\n        if (token.type == \"keyword\" && token.value == \"#definitions\") {\n          PART = DEFINITIONS;\n          break;\n        }\n\n        if (token.type == \"keyword\" && token.value == \"#ranges\") {\n          PART = RANGES;\n          break;\n        }\n\n        if (token.type == \"newline\") break;\n\n        break;\n      }\n\n      case TEXT: {\n        if (token.type != \"newline\") {\n          let txt = variables.get(\"task-text\");\n          txt += token.value + \" \";\n          variables.set(\"task-text\", txt);\n        }\n\n        if (token2.type == \"keyword\") {\n          PART = START;\n          break;\n        }\n        break;\n      }\n\n      case QUESTION: {\n        // add token to question text\n        let q = variables.get(\"q\" + q_num.toString());\n        if (token.type != \"newline\") {\n          q.text += token.value + \" \";\n        }\n        variables.set(\"q\" + q_num.toString(), q);\n\n        if (token2.type == \"keyword\") {\n          PART = START;\n          break;\n        }\n\n        break;\n      }\n\n      case DEFINITIONS: {\n        if (token.type == \"var\" && token2.type == \"eq\") {\n          variables.set(token.value, new variableInfo(token.value));\n          c_name = token.value;\n          PART = VARIABLE;\n          i = i + 1;\n          break;\n        }\n\n        if (token.type == \"var\" && token2.type == \"newline\") {\n          variables.set(token.value, new variableInfo(token.value));\n          i = i + 1;\n          break;\n        }\n\n        if (token.type == \"answer\") {\n          let q = variables.get(\"q\" + q_num.toString());\n          c_name = token.value;\n\n          if (q.answers.get(token.value) == undefined) {\n            q.answers.set(token.value, new answerInfo(token.value));\n          }\n\n          variables.set(\"q\" + q_num.toString(), q);\n          c_name = token.value;\n          PART = ANSWER;\n          break;\n        }\n\n        if (token2.type == \"keyword\") {\n          PART = START;\n          break;\n        }\n\n        break;\n      }\n\n      case VARIABLE: {\n        let info = variables.get(c_name);\n        info.definition += token.value;\n        variables.set(c_name, info);\n\n        if (token2.type == \"newline\") {\n          PART = DEFINITIONS;\n          break;\n        }\n\n        break;\n      }\n\n      case ANSWER: {\n        if (token2.type == \"newline\") {\n          PART = DEFINITIONS;\n          break;\n        }\n\n        if (token.type == \"accessor\" && token.value == \".correct\") {\n          PART = CORRECT;\n          break;\n        } else if (token.type == \"accessor\" && token.value == \".incorrect\") {\n          PART = INCORRECT;\n          break;\n        }\n\n        break;\n      }\n\n      case CORRECT: {\n        if (token2.type == \"r-bracket\") {\n          PART = DEFINITIONS;\n          break;\n        }\n\n        if (token.type == \"eq\" || token.type == \"newline\") break;\n\n        let q = variables.get(\"q\" + q_num.toString());\n        let ans = q.answers.get(c_name);\n\n        if (token.type == \"l-bracket\" || token.type == \"comma\") {\n          ans.correct.push(\"\");\n          q.answers.set(c_name, ans);\n          variables.set(\"q\" + q_num.toString(), q);\n          break;\n        }\n\n        let val = ans.correct.at(-1);\n        val += token.value;\n        ans.correct[ans.correct.length - 1] = val;\n\n        q.answers.set(c_name, ans);\n        variables.set(\"q\" + q_num.toString(), q);\n\n        if (token2.type == \"r-bracket\") {\n          PART = DEFINITIONS;\n          break;\n        }\n\n        break;\n      }\n\n      case INCORRECT: {\n        if (token2.value == \"]\") {\n          PART = DEFINITIONS;\n          break;\n        }\n\n        if (token.type == \"eq\" || token.type == \"newline\") {\n          break;\n        }\n\n        let q = variables.get(\"q\" + q_num.toString());\n        let ans = q.answers.get(c_name);\n\n        if (token.type == \"l-bracket\" || token.type == \"comma\") {\n          ans.incorrect.push(\"\");\n          q.answers.set(c_name, ans);\n          variables.set(\"q\" + q_num.toString(), q);\n          break;\n        }\n\n        let val = ans.incorrect.at(-1);\n        val += token.value;\n\n        ans.incorrect[ans.incorrect.length - 1] = val;\n\n        q.answers.set(c_name, ans);\n        variables.set(\"q\" + q_num.toString(), q);\n\n        break;\n      }\n\n      case RANGES: {\n        if (token.type == \"var\") {\n          c_name = token.value;\n          PART = SET_RANGE;\n          i = i + 2;\n          break;\n        }\n\n        if (token2.type == \"newline\") {\n          PART = START;\n        }\n        break;\n      }\n\n      case SET_RANGE: {\n        let info = variables.get(c_name);\n        info.range += token.value;\n        variables.set(c_name, info);\n\n        if (token2.type == \"newline\") {\n          PART = RANGES;\n          break;\n        }\n\n        break;\n      }\n    }\n  }\n\n  return variables;\n}\n\n/*task1 = parse(FILENAME1);\ntask2 = parse(FILENAME2);\n\nconsole.dir(tokenize(FILENAME1), {'maxArrayLength': null});\n//console.dir(task1, {'maxArrayLength': null});\n//console.dir(task1.get('q1').answers)\n//console.dir(tokenize(FILENAME2), {'maxArrayLength': null});\nconsole.log(\"=================================================\");\nconsole.dir(task2, {'maxArrayLength': null});\n\n// Iterate over all values in the map\nfor (let [_, value] of task2.entries() ) \n{\n    // For all variables\n    if ( value instanceof variableInfo )\n    {\n        // Get range and step\n        let [start, end, step] = value.range.substr(1, value.range.length-2).split(',');\n\n        // Get actual value\n        if(step == 1) \n            value.value = math.randomInt(parseInt(start), parseInt(end)).toString();\n        else \n            value.value = math.random(parseInt(start), parseInt(end)).toString();\n\n        // Replace variable name with value in task text\n        let q = task2.get('q1');\n\n        console.log(q.text);\n\n        q.text = q.text.replace(value.name, value.value);\n\n        // Replace variable name with value in answer text and \n        // correct and incorrect answers\n        for (let [k, a] of q.answers.entries() )\n        {\n            console.log(k, a);\n\n            // Replace in correct\n            a.correct.forEach((ans, ind) => {\n                a.correct[ind] = ans.replace(value.name, value.value);\n            });\n\n            // Replace in incorrect\n            a.incorrect.forEach((ans, ind) => {\n                a.incorrect[ind] = ans.replace(value.name, value.value);\n            });\n\n            console.log(a.correct, a.incorrect);\n\n            // Update values\n            q.answers.set(k, a);\n        }       \n        \n        // Update values\n        task2.set('q1', q);\n    }\n}\n\n// For each answer\n// evaluate correct and incorrect values\n// from the string expressions\nfor (let [key, value] of task2.entries() )\n{\n    if ( value instanceof taskQuestion )\n    {\n        // For each question\n        for (let [k, a] of value.answers.entries() )\n        {\n            //a.text = a.text.replace(a.name, \"__\");\n\n            // Eval correct answers\n            a.correct.forEach((value) => {\n                a.correct_values.push(math.evaluate(value));\n            });\n\n            // Eval incorrect answers\n            a.incorrect.forEach((value) => {\n                a.incorrect_values.push(math.evaluate(value));\n            });\n\n            // Update\n            task2.set(key, value);\n        }\n    }\n}\n\nconsole.log(task2.get('task-text'));\nconsole.log(task2.get('q1').text);\ntask2.get('q1').answers.get('@r').correct_values.forEach(v => console.log(v));\ntask2.get('q1').answers.get('@r').incorrect_values.forEach(v => console.log(v));\n\n\nconsole.dir(task1, {'maxArrayLength': null}); */\n"]}]}