{"remainingRequest":"/home/dc/Documents/BP/vue-bp-web/node_modules/babel-loader/lib/index.js!/home/dc/Documents/BP/vue-bp-web/node_modules/eslint-loader/index.js??ref--14-0!/home/dc/Documents/BP/vue-bp-web/src/myfiles/taskHandler.js","dependencies":[{"path":"/home/dc/Documents/BP/vue-bp-web/src/myfiles/taskHandler.js","mtime":1643133784307},{"path":"/home/dc/Documents/BP/vue-bp-web/babel.config.js","mtime":1642185636988},{"path":"/home/dc/Documents/BP/vue-bp-web/node_modules/cache-loader/dist/cjs.js","mtime":1642114936856},{"path":"/home/dc/Documents/BP/vue-bp-web/node_modules/babel-loader/lib/index.js","mtime":1642114938312},{"path":"/home/dc/Documents/BP/vue-bp-web/node_modules/eslint-loader/index.js","mtime":1642114937120}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/dc/Documents/BP/vue-bp-web/src/myfiles/taskHandler.js"],"names":["START","TEXT","VARIABLE","ANSWER","tokenize","FILENAME1","FILENAME2","QUESTION","DEFINITIONS","RANGES","SET_RANGE","CORRECT","INCORRECT","variableInfo","name","definition","range","value","answerInfo","correct","incorrect","correct_values","incorrect_values","taskQuestion","text","answers","Map","parseMathMarkup","file_name","tokens","variables","set","c_name","q_num","PART","i","length","token","token2","type","toString","txt","get","q","undefined","info","ans","push","val","at"],"mappings":"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","sourcesContent":["// const tex = require('tex-math-parser'); // import { parseTex, evaluateTex } from  // ES6 module\n\nimport { START, TEXT, VARIABLE, ANSWER, tokenize } from \"./tokenizer\"\n\nexport const FILENAME1 = 'test.txt';\nexport const FILENAME2 = 'test4.txt';\n\n//console.dir(tokenize(FILENAME1), {'maxArrayLength': null});\n\nexport const QUESTION = 2, DEFINITIONS = 3, RANGES = 4, SET_RANGE = 6, CORRECT = 7, INCORRECT = 8;\n\n// Class that represents the\n// variable type variable for tasks\nexport class variableInfo \n{\n    constructor(name) \n    {\n        this.name = name;\n        this.definition = \"\";\n        this.range = \"\";\n\n        this.value = 0; // value\n    }\n}\n\n// Class that represents the \n// answer type variable for tasks\nexport class answerInfo \n{\n    constructor(name) {\n        this.name = name;\n        this.correct = [];\n        this.incorrect = [];\n\n        // values\n        this.correct_values = []\n        this.incorrect_values = []\n    }\n}\n\n// Class that represents the \n// questions for a task\nexport class taskQuestion \n{\n    constructor() {\n        this.text = \"\";\n        this.answers = new Map();\n    }\n}\n\n// Class that represents the task\n// this will be saved in the database\n/* class Task \n{\n    constructor() {\n        this.task_text = \"\";\n        this.questions = []\n        this.variables = []\n    }\n}*/\n\n// Parses the markup language\nexport function parseMathMarkup(file_name) \n{\n    // First, tokenize the input file\n    let tokens = tokenize(file_name);\n\n    // Create variable where the new task\n    // will be saved\n    //current_task = new Task()\n\n    let variables = new Map();\n    variables.set('task-text', '');\n    let c_name = \"\";\n    let q_num = 0;\n\n    var PART = START;\n\n    for ( let i = 0; i < tokens.length; i++ ) {\n\n        let token = tokens[i];\n        let token2 = (i + 1 == tokens.length) ? tokens[i] : tokens[i+1];\n\n        switch(PART) \n        {\n            case START : {\n                if ( token.type == 'keyword' && token.value == '#text' ) \n                    { PART = TEXT; break; }\n                \n                if ( token.type == 'keyword' && token.value == '#question' )\n                    { \n                        PART = QUESTION; \n                        q_num++;\n                        variables.set('q'+ q_num.toString(), new taskQuestion() );\n                        break;\n                    }\n\n                if ( token.type == 'keyword' && token.value == '#definitions' ) \n                    { PART = DEFINITIONS; break; }\n\n                if ( token.type == 'keyword' && token.value == '#ranges' ) \n                    { PART = RANGES; break; }\n\n                if ( token.type == 'newline' ) break;\n\n                break;\n            }\n            \n            case TEXT : {\n\n                if ( token.type != 'newline' ) {\n\n                    let txt = variables.get('task-text');\n                    txt += token.value + ' ';\n                    variables.set('task-text', txt);\n\n                }\n\n                if ( token2.type == 'keyword' ) {\n                    PART = START;\n                    break;\n                }\n                break;\n            }\n\n            case QUESTION : {\n                \n                // add token to question text\n                let q = variables.get('q' + q_num.toString());\n                if(token.type != 'newline') {\n                    q.text += token.value + ' ';\n                }\n                variables.set('q' + q_num.toString(), q)\n                \n                if ( token2.type == 'keyword' ) {\n                    PART = START;\n                    break;\n                }\n\n                break;\n            }\n\n            case DEFINITIONS : {\n                if ( token.type == 'var' && token2.type == 'eq' ) {\n                    variables.set(token.value, new variableInfo(token.value));\n                    c_name = token.value;\n                    PART = VARIABLE;\n                    i = i + 1;\n                    break;\n                }\n\n                if ( token.type == 'var' && token2.type == 'newline' ) {\n                    variables.set(token.value, new variableInfo(token.value));\n                    i = i + 1;\n                    break;\n                }\n\n                if ( token.type == 'answer' ) {\n                    let q = variables.get('q' + q_num.toString());\n                    c_name = token.value;\n                    \n                    if(q.answers.get(token.value) == undefined)\n                    {\n                        q.answers.set(token.value, new answerInfo(token.value));\n                    }\n                    \n                    variables.set('q' + q_num.toString(), q);\n                    c_name = token.value;\n                    PART = ANSWER;\n                    break;\n                }\n\n                if ( token2.type == 'keyword' ) {\n                    PART = START;\n                    break;\n                }  \n\n                break;\n            }\n\n            case VARIABLE : {\n\n                let info = variables.get(c_name);\n                info.definition += token.value;\n                variables.set(c_name, info);\n\n                if ( token2.type == 'newline' ) {\n                    PART = DEFINITIONS;\n                    break;\n                }\n\n                break;\n            }\n\n            case ANSWER : {\n\n                if ( token2.type == 'newline' ) {\n                    PART = DEFINITIONS;\n                    break;\n                }\n\n                if(token.type == 'accessor' && token.value == '.correct') {\n                    PART = CORRECT;\n                    break;\n                }\n\n                else if(token.type == 'accessor' && token.value == '.incorrect') {\n                    PART = INCORRECT;\n                    break;\n                }\n\n                break;\n            }\n\n            case CORRECT: {\n\n                if ( token2.type == 'r-bracket') {\n                    PART = DEFINITIONS;\n                    break;\n                }\n                \n                if(token.type == 'eq' || token.type == 'newline') break;\n                \n                let q = variables.get('q' + q_num.toString() );\n                let ans = q.answers.get(c_name); \n\n                if(token.type == 'l-bracket' || token.type == 'comma')\n                {\n                    ans.correct.push('');\n                    q.answers.set(c_name, ans);\n                    variables.set('q' + q_num.toString(), q)\n                    break;\n                }\n                \n                let val = ans.correct.at(-1);\n                val += token.value;\n                ans.correct[ans.correct.length - 1] = val;\n                \n                q.answers.set(c_name, ans);\n                variables.set('q' + q_num.toString(), q)\n\n                if ( token2.type == 'r-bracket') {\n                    PART = DEFINITIONS;\n                    break;\n                }\n                \n                break;\n            }\n\n            case INCORRECT: {\n\n                if ( token2.value == ']') {\n                    PART = DEFINITIONS;\n                    break;\n                }\n\n                if(token.type == 'eq' || token.type == 'newline')\n                {\n                    break;\n                }\n\n                let q = variables.get('q' + q_num.toString() );\n                let ans = q.answers.get(c_name);\n                \n                if(token.type == 'l-bracket' || token.type == 'comma')\n                {\n                    ans.incorrect.push('');\n                    q.answers.set(c_name, ans);\n                    variables.set('q' + q_num.toString(), q)\n                    break;\n                }\n\n                let val = ans.incorrect.at(-1);\n                val += token.value;\n\n                ans.incorrect[ans.incorrect.length - 1] = val;\n                \n                q.answers.set(c_name, ans);\n                variables.set('q' + q_num.toString(), q)\n                \n                break;\n            }\n\n            case RANGES : \n            {\n                if ( token.type == 'var' ) {\n                    c_name = token.value;\n                    PART = SET_RANGE;\n                    i = i + 2;\n                    break;\n                }  \n\n                if ( token2.type == 'newline' ) {\n                    PART = START;\n                }\n                break;\n            }\n\n            case SET_RANGE :\n            {\n                let info = variables.get(c_name);\n                info.range += token.value;\n                variables.set(c_name, info);\n\n                if ( token2.type == 'newline' ) {\n                    PART = RANGES;\n                    break;\n                }\n\n                break;\n            }\n        }\n    }\n\n    return variables;\n}\n\n/*task1 = parse(FILENAME1);\ntask2 = parse(FILENAME2);\n\nconsole.dir(tokenize(FILENAME1), {'maxArrayLength': null});\n//console.dir(task1, {'maxArrayLength': null});\n//console.dir(task1.get('q1').answers)\n//console.dir(tokenize(FILENAME2), {'maxArrayLength': null});\nconsole.log(\"=================================================\");\nconsole.dir(task2, {'maxArrayLength': null});\n\n// Iterate over all values in the map\nfor (let [_, value] of task2.entries() ) \n{\n    // For all variables\n    if ( value instanceof variableInfo )\n    {\n        // Get range and step\n        let [start, end, step] = value.range.substr(1, value.range.length-2).split(',');\n\n        // Get actual value\n        if(step == 1) \n            value.value = math.randomInt(parseInt(start), parseInt(end)).toString();\n        else \n            value.value = math.random(parseInt(start), parseInt(end)).toString();\n\n        // Replace variable name with value in task text\n        let q = task2.get('q1');\n\n        console.log(q.text);\n\n        q.text = q.text.replace(value.name, value.value);\n\n        // Replace variable name with value in answer text and \n        // correct and incorrect answers\n        for (let [k, a] of q.answers.entries() )\n        {\n            console.log(k, a);\n\n            // Replace in correct\n            a.correct.forEach((ans, ind) => {\n                a.correct[ind] = ans.replace(value.name, value.value);\n            });\n\n            // Replace in incorrect\n            a.incorrect.forEach((ans, ind) => {\n                a.incorrect[ind] = ans.replace(value.name, value.value);\n            });\n\n            console.log(a.correct, a.incorrect);\n\n            // Update values\n            q.answers.set(k, a);\n        }       \n        \n        // Update values\n        task2.set('q1', q);\n    }\n}\n\n// For each answer\n// evaluate correct and incorrect values\n// from the string expressions\nfor (let [key, value] of task2.entries() )\n{\n    if ( value instanceof taskQuestion )\n    {\n        // For each question\n        for (let [k, a] of value.answers.entries() )\n        {\n            //a.text = a.text.replace(a.name, \"__\");\n\n            // Eval correct answers\n            a.correct.forEach((value) => {\n                a.correct_values.push(math.evaluate(value));\n            });\n\n            // Eval incorrect answers\n            a.incorrect.forEach((value) => {\n                a.incorrect_values.push(math.evaluate(value));\n            });\n\n            // Update\n            task2.set(key, value);\n        }\n    }\n}\n\nconsole.log(task2.get('task-text'));\nconsole.log(task2.get('q1').text);\ntask2.get('q1').answers.get('@r').correct_values.forEach(v => console.log(v));\ntask2.get('q1').answers.get('@r').incorrect_values.forEach(v => console.log(v));\n\n\nconsole.dir(task1, {'maxArrayLength': null}); */"]}]}