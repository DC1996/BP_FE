{"remainingRequest":"/home/dc/Documents/BP/vue-bp-web/node_modules/thread-loader/dist/cjs.js!/home/dc/Documents/BP/vue-bp-web/node_modules/babel-loader/lib/index.js!/home/dc/Documents/BP/vue-bp-web/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/dc/Documents/BP/vue-bp-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dc/Documents/BP/vue-bp-web/src/components/createtaskpage.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dc/Documents/BP/vue-bp-web/src/components/createtaskpage.vue","mtime":1643498407065},{"path":"/home/dc/Documents/BP/vue-bp-web/babel.config.js","mtime":1642185636988},{"path":"/home/dc/Documents/BP/vue-bp-web/node_modules/cache-loader/dist/cjs.js","mtime":1642114936856},{"path":"/home/dc/Documents/BP/vue-bp-web/node_modules/thread-loader/dist/cjs.js","mtime":1642114936856},{"path":"/home/dc/Documents/BP/vue-bp-web/node_modules/babel-loader/lib/index.js","mtime":1642114938312},{"path":"/home/dc/Documents/BP/vue-bp-web/node_modules/cache-loader/dist/cjs.js","mtime":1642114936856},{"path":"/home/dc/Documents/BP/vue-bp-web/node_modules/vue-loader/lib/index.js","mtime":1642114938760}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["createtaskpage.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <v-container \n        class=\"d-flex flex-column justify-start align-center mt-10 b-g rounded-lg\">\n        \n        <h3 class=\"t-t-color text-h4 my-4 font-weight-medium\"> Task </h3>\n\n        <v-container fluid rounded label=\"Task\" class=\"d-flex flex-row\">\n            <v-col cols=\"16\" class=\"mx-2 pa-0 ma-0\">\n                <v-textarea text-narrow\n                    id=\"task-text\" class=\"text-caption\"\n                    v-model=\"text\" solo no-resize rows=\"20\">\n                </v-textarea>\n            <div>\n                <v-btn class=\"mx-1\" @click=\"parseText\">Parse</v-btn>\n                <v-btn class=\"mx-1\" @click=\"previewTask\">Preview</v-btn>\n                <v-btn class=\"mx-1\" @click=\"saveText\">Save</v-btn>\n                <v-btn class=\"mx-1\" @click=\"restoreText\">Restore</v-btn>\n            </div>\n\n            <v-overlay :value=\"taskOverlay\" >\n                    <v-sheet \n                        elevation=\"4\" width=\"600\" \n                        class=\"pa-4 ma-2 d-flex flex-column justify-flex-start align-flex-start rounded-lg\"\n                    >\n\n                    <h3>Task text: {{ task_text }}</h3>\n                    <div class=\"d-flex flex-column ma-2 pa-1\" v-for=\"(q, i) in questions\" :key=\"q\">\n                        <h4 class=\"ma-1\"> Question: {{ q.text }} </h4>\n                        <div class=\"ma-1 pa-1\" v-if=\"q.text.includes(answers[i].name)\">\n                            <p v-for=\"(item, index) in answers[i].correct_values\" :key=\"index\" >{{item}}</p>\n                            <p v-for=\"(item, index) in answers[i].incorrect_values\" :key=\"index\" >{{item}}</p>\n                        </div>\n                    </div>\n\n                    <v-btn @click=\"taskOverlay = false\">Close</v-btn>\n                    </v-sheet>\n            </v-overlay>\n\n            </v-col>\n            <v-col cols=\"16\" class=\"mx-2\">\n                <h4> Variables </h4>\n                        <v-chip\n                            v-for=\"(variable, i) in variables\" :key=\"i\"\n                            @click=\"variableInfo(i)\"\n                            :elevation=\"6\" color=\"primary\"\n                            class=\"mx-2 my-1 px-6 py-4 pointer\">\n                            {{ variable.name.substr(1) }}\n                        </v-chip>\n                        <v-overlay \n                            :value=\"overlayV\" v-if=\"variables.length != 0\">\n                            <v-sheet \n                                elevation=\"4\" width=\"250\" \n                                class=\"pa-4 ma-2 d-flex flex-column justify-flex-start align-flex-start rounded-lg\"\n                            >\n                                <h4 class=\"ma-2\"> {{ variables[indexV].name }} </h4>\n                                <p class=\"ma-2\"> Definition: {{ variables[indexV].definition }} </p>\n                                <p class=\"ma-2\"> Range: {{ variables[indexV].range }} </p>\n                                <p class=\"ma-2\"> Value: {{ variables[indexV].value }} </p>\n                                <v-btn @click=\"overlayV = false\">Close</v-btn>\n                            </v-sheet>\n                        </v-overlay>\n\n                <h4>Questions</h4>\n                <v-sheet \n                    v-for=\"question in questions\" :key=\"question\" \n                    class=\"d-flex flex-row align-center ma-1 pa-1\"\n                    width=\"50%\"\n                    elevation=\"3\"\n                    rounded\n                >\n                    <v-tooltip top >\n                        <template #activator=\"{on}\">\n                            <v-chip v-on=\"on\" label=\"text\" class=\"mx-1\"> {{ question.text }} </v-chip>\n                        </template>\n                        <span>Text</span>\n                    </v-tooltip>\n                </v-sheet>\n                <h5>Answers</h5>\n                    <v-chip\n                        v-for=\"(answer, i) in answers\" :key=\"i\"\n                        @click=\"answerInfo(i)\"\n                        :elevation=\"6\" color=\"primary\"\n                        class=\"mx-2 my-1 px-6 py-4 pointer\">\n                        {{ answer.name.substr(1) }}\n                    </v-chip>\n                    <v-overlay \n                        :value=\"overlayA\" v-if=\"answers.length != 0\">\n                        <v-sheet \n                            elevation=\"4\" width=\"250\" \n                            class=\"pa-4 ma-2 d-flex flex-column justify-flex-start align-flex-start rounded-lg\"\n                        >\n                            <h4 class=\"ma-2\"> {{ answers[indexA].name }} </h4>\n                            <p class=\"ma-2\" v-for=\"correct in answers[indexA].correct\" :key=\"correct\"> \n                                Correct: {{ correct }} \n                            </p>\n                            <p class=\"ma-2\" v-for=\"incorrect in answers[indexA].incorrect\" :key=\"incorrect\"> \n                                Incorrect: {{ incorrect }} \n                            </p>\n                            <v-btn @click=\"overlayA = false\">Close</v-btn>\n                        </v-sheet>\n                    </v-overlay>\n            </v-col>\n        </v-container>\n\n    </v-container>\n</template>\n\n<script>\n    import { tokenize } from \"../myfiles/tokenizer\"\n    import { parseMathMarkup, taskQuestion, variableInfo } from \"../myfiles/taskHandler\"\n    import { randomInt, evaluate } from \"mathjs\";\n\n    export default {\n        data() {\n            return {\n                text: \"\",\n                task_text: \"\",\n                variables: [],\n                questions: [],\n                answers: [],\n\n                overlayV: false,\n                overlayA: false,\n                taskOverlay: false,\n                indexV: 0,\n                indexA: 0,\n            };\n        },\n        computed: {\n            getText() { return this.text; }\n        },\n\n        created() {\n            window.addEventListener('beforeunload', function(event) {\n                event.returnValue = 'Write something'\n                alert(\"wait\")\n            })\n        },\n\n        methods: {\n            variableInfo : function(i) {\n                this.indexV = i\n                this.overlayV = true\n            },\n            answerInfo: function(i) {\n                this.indexA = i\n                this.overlayA = true\n            },\n            previewTask : function () {\n                this.taskOverlay = true\n\n                localStorage.setItem('data', this.text)\n            },\n            saveText: function() {\n                localStorage.setItem('data', this.text)\n            },\n            restoreText: function() {\n                this.text = localStorage.getItem('data')\n            },\n            parseText : function () {\n\n                // Tokenize\n                console.log( tokenize( this.text ) )\n\n                // parse text\n                var parsedData = parseMathMarkup( this.text )\n\n                // print out the tokenized string from the textarea\n                console.log( parsedData );\n\n                // clear arrays\n                this.variables = []\n                this.questions = []\n                this.answers = []\n                this.task_text = \"\"\n\n                this.task_text = parsedData.get('task-text') // save task text\n                console.log(\"TADAAAA\",this.task_text)\n\n                // save variables and questions\n                for (let [_, value] of parsedData.entries() ) \n                {\n                    console.log(_)\n                    if ( value instanceof variableInfo ) this.variables.push(value)\n                    if ( value instanceof taskQuestion ) this.questions.push(value)\n                }\n\n                // extract answers\n                for (let question of this.questions) \n                {\n                    for (let [_, value] of question.answers.entries() )\n                    {\n                       console.log(_)\n                       this.answers.push(value)\n                    }\n                }\n\n                // -------------------------------------------------\n                // For all variables, compute range if range != \"\"\n                for ( let v of this.variables ) \n                {\n                    if ( v.range.length != 0 )\n                    {\n                        let [start, end, step] = v.range.substring(1, v.range.length-1).split(',')\n                        console.log(start, end , step)\n                        \n                        // Get actual value\n                        v.value = randomInt(parseInt(start), parseInt(end)).toString()\n                    }\n                    else\n                    {\n                        v.value = v.definition;\n                    }\n\n                    this.task_text = this.task_text.replace(v.name, v.value)\n\n                    // For each answer replace value\n                    for (let a of this.answers)\n                    {\n                        // Replace in correct\n                        a.correct.forEach((ans, ind) => {\n                            a.correct[ind] = ans.replace(v.name, v.value)                            \n                        });\n\n                        // Replace in incorrect\n                        a.incorrect.forEach((ans, ind) => {\n                            a.incorrect[ind] = ans.replace(v.name, v.value);\n                        });\n                    }\n                }\n\n                // Get final result\n                for(let a of this.answers) \n                {\n                    // Evaluate expressions\n                    a.correct.forEach(expr => {a.correct_values.push( evaluate(expr) ) });\n                    a.incorrect.forEach(expr => { a.incorrect_values.push( evaluate(expr) ) });\n                }\n\n\n                console.log(\"VARS\", this.variables)\n                console.log(\"QSTN\", this.questions)\n                console.log(\"ANSW\", this.answers)\n            }     \n        }\n    }\n</script>\n\n<style>\n    .b-g {\n        background-color: var(--green-background-color);\n        height: 90%;\n    }\n    .r-g {\n        height: 90%;\n    }\n    .h-g {\n        border: solid 2px hotpink;\n    }\n\n    [text-narrow] {\n        line-height: 1.1 !important;\n        font-size: 1rem;\n    }\n\n    .pointer {\n        cursor: pointer !important;\n    }\n</style>"],"sourceRoot":"src/components"}]}