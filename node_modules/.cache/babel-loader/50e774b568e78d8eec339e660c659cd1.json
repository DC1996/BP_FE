{"remainingRequest":"/home/dc/Documents/BP/vue-bp-web/node_modules/babel-loader/lib/index.js!/home/dc/Documents/BP/vue-bp-web/node_modules/eslint-loader/index.js??ref--14-0!/home/dc/Documents/BP/vue-bp-web/src/services/testDataService.js","dependencies":[{"path":"/home/dc/Documents/BP/vue-bp-web/src/services/testDataService.js","mtime":1648202473076},{"path":"/home/dc/Documents/BP/vue-bp-web/babel.config.js","mtime":1646999302412},{"path":"/home/dc/Documents/BP/vue-bp-web/node_modules/cache-loader/dist/cjs.js","mtime":1642114936856},{"path":"/home/dc/Documents/BP/vue-bp-web/node_modules/babel-loader/lib/index.js","mtime":1642114938312},{"path":"/home/dc/Documents/BP/vue-bp-web/node_modules/eslint-loader/index.js","mtime":1642114937120}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICIvaG9tZS9kYy9Eb2N1bWVudHMvQlAvdnVlLWJwLXdlYi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY2xhc3NDYWxsQ2hlY2suanMiOwppbXBvcnQgX2NyZWF0ZUNsYXNzIGZyb20gIi9ob21lL2RjL0RvY3VtZW50cy9CUC92dWUtYnAtd2ViL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVDbGFzcy5qcyI7CmltcG9ydCBodHRwIGZyb20gIi4uLy4uL2h0dHAtY29tbW9uIjsKCnZhciBUZXN0RGF0YVNlcnZpY2UgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogIGZ1bmN0aW9uIFRlc3REYXRhU2VydmljZSgpIHsKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBUZXN0RGF0YVNlcnZpY2UpOwogIH0KCiAgX2NyZWF0ZUNsYXNzKFRlc3REYXRhU2VydmljZSwgW3sKICAgIGtleTogImdldEFsbCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0QWxsKCkgewogICAgICByZXR1cm4gaHR0cC5nZXQoIi90ZXN0cyIpOwogICAgfQogIH0sIHsKICAgIGtleTogImdldCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0KGlkKSB7CiAgICAgIHJldHVybiBodHRwLmdldCgiL3Rlc3RzLyIuY29uY2F0KGlkKSk7CiAgICB9CiAgfSwgewogICAga2V5OiAiYWRkVGFzayIsCiAgICB2YWx1ZTogZnVuY3Rpb24gYWRkVGFzayhkYXRhKSB7CiAgICAgIHJldHVybiBodHRwLnBvc3QoIi90ZXN0cy9hZGRfdGFzayIsIGRhdGEpOwogICAgfQogIH0sIHsKICAgIGtleTogImFkZFRhc2tzIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBhZGRUYXNrcyhkYXRhKSB7CiAgICAgIHJldHVybiBodHRwLnBvc3QoIi90ZXN0cy9hZGRfdGFza3MiLCBkYXRhKTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJjcmVhdGUiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGNyZWF0ZShkYXRhKSB7CiAgICAgIHJldHVybiBodHRwLnBvc3QoIi90ZXN0cyIsIGRhdGEpOwogICAgfQogIH0sIHsKICAgIGtleTogInVwZGF0ZSIsCiAgICB2YWx1ZTogZnVuY3Rpb24gdXBkYXRlKGlkLCBkYXRhKSB7CiAgICAgIHJldHVybiBodHRwLnB1dCgiL3Rlc3RzLyIuY29uY2F0KGlkKSwgZGF0YSk7CiAgICB9IC8vIFJlbW92ZSB0YXNrcyBmb3IgY29udmVuaWVudCBpbnNlcnRpb24KCiAgfSwgewogICAga2V5OiAiZGV0ZWxlVGFza3MiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGRldGVsZVRhc2tzKGlkKSB7CiAgICAgIHJldHVybiBodHRwLmRlbGV0ZSgiL3Rlc3RzLyIuY29uY2F0KGlkKSk7CiAgICB9CiAgfSwgewogICAga2V5OiAiZGVsZXRlIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBfZGVsZXRlKGlkKSB7CiAgICAgIHJldHVybiBodHRwLmRlbGV0ZSgiL3Rlc3RzLyIuY29uY2F0KGlkKSk7CiAgICB9CiAgfSwgewogICAga2V5OiAiZGVsZXRlQWxsIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBkZWxldGVBbGwoKSB7CiAgICAgIHJldHVybiBodHRwLmRlbGV0ZSgiL3Rlc3RzIik7CiAgICB9CiAgfV0pOwoKICByZXR1cm4gVGVzdERhdGFTZXJ2aWNlOwp9KCk7CgpleHBvcnQgZGVmYXVsdCBuZXcgVGVzdERhdGFTZXJ2aWNlKCk7"},{"version":3,"sources":["/home/dc/Documents/BP/vue-bp-web/src/services/testDataService.js"],"names":["http","TestDataService","get","id","data","post","put","delete"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,mBAAjB;;IAEMC,e;;;;;;;WACJ,kBAAS;AACP,aAAOD,IAAI,CAACE,GAAL,CAAS,QAAT,CAAP;AACD;;;WAED,aAAIC,EAAJ,EAAQ;AACN,aAAOH,IAAI,CAACE,GAAL,kBAAmBC,EAAnB,EAAP;AACD;;;WAED,iBAAQC,IAAR,EAAc;AACZ,aAAOJ,IAAI,CAACK,IAAL,CAAU,iBAAV,EAA6BD,IAA7B,CAAP;AACD;;;WAED,kBAASA,IAAT,EAAe;AACb,aAAOJ,IAAI,CAACK,IAAL,CAAU,kBAAV,EAA8BD,IAA9B,CAAP;AACD;;;WAED,gBAAOA,IAAP,EAAa;AACX,aAAOJ,IAAI,CAACK,IAAL,CAAU,QAAV,EAAoBD,IAApB,CAAP;AACD;;;WAED,gBAAOD,EAAP,EAAWC,IAAX,EAAiB;AACf,aAAOJ,IAAI,CAACM,GAAL,kBAAmBH,EAAnB,GAAyBC,IAAzB,CAAP;AACD,K,CAED;;;;WACA,qBAAYD,EAAZ,EAAgB;AACd,aAAOH,IAAI,CAACO,MAAL,kBAAsBJ,EAAtB,EAAP;AACD;;;WAED,iBAAOA,EAAP,EAAW;AACT,aAAOH,IAAI,CAACO,MAAL,kBAAsBJ,EAAtB,EAAP;AACD;;;WAED,qBAAY;AACV,aAAOH,IAAI,CAACO,MAAL,UAAP;AACD;;;;;;AAGH,eAAe,IAAIN,eAAJ,EAAf","sourcesContent":["import http from \"../../http-common\";\n\nclass TestDataService {\n  getAll() {\n    return http.get(\"/tests\");\n  }\n\n  get(id) {\n    return http.get(`/tests/${id}`);\n  }\n\n  addTask(data) {\n    return http.post(\"/tests/add_task\", data);\n  }\n\n  addTasks(data) {\n    return http.post(\"/tests/add_tasks\", data);\n  }\n\n  create(data) {\n    return http.post(\"/tests\", data);\n  }\n\n  update(id, data) {\n    return http.put(`/tests/${id}`, data);\n  }\n\n  // Remove tasks for convenient insertion\n  deteleTasks(id) {\n    return http.delete(`/tests/${id}`);\n  }\n\n  delete(id) {\n    return http.delete(`/tests/${id}`);\n  }\n\n  deleteAll() {\n    return http.delete(`/tests`);\n  }\n}\n\nexport default new TestDataService();\n"]}]}