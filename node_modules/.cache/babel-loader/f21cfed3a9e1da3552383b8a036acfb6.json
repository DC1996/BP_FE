{"remainingRequest":"/home/dc/Documents/BP/vue-bp-web/node_modules/babel-loader/lib/index.js!/home/dc/Documents/BP/vue-bp-web/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/dc/Documents/BP/vue-bp-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dc/Documents/BP/vue-bp-web/src/components/yourAssignments.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dc/Documents/BP/vue-bp-web/src/components/yourAssignments.vue","mtime":1649025543732},{"path":"/home/dc/Documents/BP/vue-bp-web/babel.config.js","mtime":1646999302412},{"path":"/home/dc/Documents/BP/vue-bp-web/node_modules/cache-loader/dist/cjs.js","mtime":1642114936856},{"path":"/home/dc/Documents/BP/vue-bp-web/node_modules/babel-loader/lib/index.js","mtime":1642114938312},{"path":"/home/dc/Documents/BP/vue-bp-web/node_modules/cache-loader/dist/cjs.js","mtime":1642114936856},{"path":"/home/dc/Documents/BP/vue-bp-web/node_modules/vue-loader/lib/index.js","mtime":1642114938760}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyIGZyb20gIi9ob21lL2RjL0RvY3VtZW50cy9CUC92dWUtYnAtd2ViL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcC5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBjb25jcmV0ZVRlc3REYXRhU2VydmljZSBmcm9tICcuLi9zZXJ2aWNlcy9jb25jcmV0ZVRlc3REYXRhU2VydmljZSc7CmltcG9ydCBUYXNrRGF0YVNlcnZpY2UgZnJvbSAiLi4vc2VydmljZXMvdGFza0RhdGFTZXJ2aWNlIjsKaW1wb3J0IHVzZXJEYXRhU2VydmljZSBmcm9tICcuLi9zZXJ2aWNlcy91c2VyRGF0YVNlcnZpY2UnOwpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHNlbGVjdGVkVGVzdDoge30sCiAgICAgIC8vIFdoaWNoIHRlc3Qgd2FzIHNlbGVjdGVkIHRvIGJlZ2luIG9yIHZpZXcgcmVzdWx0IG9mCiAgICAgIHN0YXJ0RGlhbG9nOiBmYWxzZSwKICAgICAgLy8gU2hvdyAnQXJlIHlvdSBzdXJlJyBkaWFsb2cgYmVmb3JlIHN0YXJ0aW5nIHRlc3QKICAgICAgcmVzdWx0c0RpYWxvZzogZmFsc2UsCiAgICAgIGNhbGN1bGF0ZWRGcmFjdGlvbjogJycsCiAgICAgIGNhbGN1bGF0ZWRQZXJjZW50YWdlOiAnJywKICAgICAgc2VhcmNoOiAiIiwKICAgICAgaGVhZGVyczogW3sKICAgICAgICB0ZXh0OiAiVGVzdCBuYW1lIiwKICAgICAgICB2YWx1ZTogInRlc3RfbmFtZSIsCiAgICAgICAgd2lkdGg6ICI0NWNoIgogICAgICB9LCB7CiAgICAgICAgdGV4dDogIkFzc2lnbmVkIGJ5IiwKICAgICAgICB2YWx1ZTogImFzc2lnbmVkQnkiLAogICAgICAgIHdpZHRoOiAiNTBjaCIKICAgICAgfSwgewogICAgICAgIHRleHQ6ICJUaW1lIGxpbWl0IiwKICAgICAgICB2YWx1ZTogInRpbWVfbGltaXQiLAogICAgICAgIHdpZHRoOiAiMjVjaCIKICAgICAgfSwgewogICAgICAgIHRleHQ6ICJBY3Rpb24iLAogICAgICAgIHZhbHVlOiAiYWN0aW9uIiwKICAgICAgICBhbGlnbjogImNlbnRlciIsCiAgICAgICAgc29ydGFibGU6IGZhbHNlLAogICAgICAgIHdpZHRoOiAiMTBjaCIKICAgICAgfV0sCiAgICAgIGFzc2lnbm1lbnRzOiBbXQogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7fSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkge30sCiAgLy8gVGhpcyBmdW5jdGlvbiBydW5zIGJlZm9yZSB0aGUgVUkgbG9hZHMKICBiZWZvcmVNb3VudDogZnVuY3Rpb24gYmVmb3JlTW91bnQoKSB7CiAgICAvLyBMb2FkIHRhc2tzIGZyb20gdGhlIGRhdGFiYXNlCiAgICB0aGlzLnJldHJpZXZlVGFza3MoKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIHRlc3RSZXN1bHQ6IGZ1bmN0aW9uIHRlc3RSZXN1bHQoKSB7CiAgICAgIC8vIElmIGEgdGVzdCBpcyBzZWxlY3RlZAogICAgICBpZiAodGhpcy5zZWxlY3RlZFRlc3QpIHsKICAgICAgICB2YXIgYW5zd2Vyc1RvdGFsID0gMDsKICAgICAgICB2YXIgY29ycmVjdEFuc3dlcnMgPSAwOwoKICAgICAgICB2YXIgX2l0ZXJhdG9yID0gX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIodGhpcy5zZWxlY3RlZFRlc3QuY29udGVudCksCiAgICAgICAgICAgIF9zdGVwOwoKICAgICAgICB0cnkgewogICAgICAgICAgZm9yIChfaXRlcmF0b3IucygpOyAhKF9zdGVwID0gX2l0ZXJhdG9yLm4oKSkuZG9uZTspIHsKICAgICAgICAgICAgdmFyIHRhc2sgPSBfc3RlcC52YWx1ZTsKCiAgICAgICAgICAgIHZhciBfaXRlcmF0b3IyID0gX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIodGFzay5jb250ZW50LnF1ZXN0aW9ucyksCiAgICAgICAgICAgICAgICBfc3RlcDI7CgogICAgICAgICAgICB0cnkgewogICAgICAgICAgICAgIGZvciAoX2l0ZXJhdG9yMi5zKCk7ICEoX3N0ZXAyID0gX2l0ZXJhdG9yMi5uKCkpLmRvbmU7KSB7CiAgICAgICAgICAgICAgICB2YXIgcXVlc3Rpb24gPSBfc3RlcDIudmFsdWU7CgogICAgICAgICAgICAgICAgdmFyIF9pdGVyYXRvcjMgPSBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlcihxdWVzdGlvbi5hbnN3ZXJzKSwKICAgICAgICAgICAgICAgICAgICBfc3RlcDM7CgogICAgICAgICAgICAgICAgdHJ5IHsKICAgICAgICAgICAgICAgICAgZm9yIChfaXRlcmF0b3IzLnMoKTsgIShfc3RlcDMgPSBfaXRlcmF0b3IzLm4oKSkuZG9uZTspIHsKICAgICAgICAgICAgICAgICAgICB2YXIgYW5zd2VyID0gX3N0ZXAzLnZhbHVlOwogICAgICAgICAgICAgICAgICAgIC8vIEluY3JlbWVudCB0b3RhbCBhbnN3ZXIgY291bnQKICAgICAgICAgICAgICAgICAgICBhbnN3ZXJzVG90YWwgPSBhbnN3ZXJzVG90YWwgKyAxOyAvLyBDaGVjayBpZiBhbnN3ZXIgaXMgY29ycmVjdAoKICAgICAgICAgICAgICAgICAgICBpZiAoYW5zd2VyLmNvcnJlY3RbMF0gPT0gYW5zd2VyLnNlbGVjdGVkKSBjb3JyZWN0QW5zd2VycyA9IGNvcnJlY3RBbnN3ZXJzICsgMTsKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgICAgICAgICAgICAgIF9pdGVyYXRvcjMuZShlcnIpOwogICAgICAgICAgICAgICAgfSBmaW5hbGx5IHsKICAgICAgICAgICAgICAgICAgX2l0ZXJhdG9yMy5mKCk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9IGNhdGNoIChlcnIpIHsKICAgICAgICAgICAgICBfaXRlcmF0b3IyLmUoZXJyKTsKICAgICAgICAgICAgfSBmaW5hbGx5IHsKICAgICAgICAgICAgICBfaXRlcmF0b3IyLmYoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0gY2F0Y2ggKGVycikgewogICAgICAgICAgX2l0ZXJhdG9yLmUoZXJyKTsKICAgICAgICB9IGZpbmFsbHkgewogICAgICAgICAgX2l0ZXJhdG9yLmYoKTsKICAgICAgICB9CgogICAgICAgIHRoaXMuY2FsY3VsYXRlZFBlcmNlbnRhZ2UgPSBjb3JyZWN0QW5zd2VycyAvIGFuc3dlcnNUb3RhbCAqIDEwMDsKICAgICAgICB0aGlzLmNhbGN1bGF0ZWRGcmFjdGlvbiA9ICIiLmNvbmNhdChjb3JyZWN0QW5zd2VycywgIi8iKS5jb25jYXQoYW5zd2Vyc1RvdGFsKTsKICAgICAgfQogICAgfSwKICAgIHN0YXJ0VGVzdDogZnVuY3Rpb24gc3RhcnRUZXN0KGlkKSB7CiAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHsKICAgICAgICBuYW1lOiAidGFrZVRlc3QiLAogICAgICAgIHBhcmFtczogewogICAgICAgICAgaWQ6IGlkCiAgICAgICAgfQogICAgICB9KTsKICAgIH0sCiAgICB2aWV3UmVzdWx0czogZnVuY3Rpb24gdmlld1Jlc3VsdHModGVzdCkgewogICAgICB0aGlzLnNlbGVjdGVkVGVzdCA9IHRlc3Q7CiAgICAgIHRoaXMudGVzdFJlc3VsdCgpOwogICAgICB0aGlzLnJlc3VsdHNEaWFsb2cgPSB0cnVlOwogICAgfSwKICAgIC8vIGRlbGV0ZSBzZWxlY3RlZCB0YXNrCiAgICBzaG93RGVsZXRlRGlhbG9nOiBmdW5jdGlvbiBzaG93RGVsZXRlRGlhbG9nKGl0ZW0pIHsKICAgICAgdGhpcy5jdXJyZW50SWQgPSBpdGVtLmlkOwogICAgICB0aGlzLmRlbGV0ZURpYWxvZyA9IHRydWU7CiAgICB9LAogICAgZGVsZXRlVGFzazogZnVuY3Rpb24gZGVsZXRlVGFzayhpZCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgVGFza0RhdGFTZXJ2aWNlLmRlbGV0ZShpZCkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgX3RoaXMubWVzc2FnZSA9IHJlcy5kYXRhLm1lc3NhZ2U7CiAgICAgICAgX3RoaXMuc3VjY2VzcyA9IHRydWU7CiAgICAgICAgX3RoaXMuaW5mb01lc3NhZ2UgPSB0cnVlOwoKICAgICAgICBfdGhpcy5yZXRyaWV2ZVRhc2tzKCk7CgogICAgICAgIF90aGlzLmRlbGV0ZURpYWxvZyA9IGZhbHNlOwogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyKSB7CiAgICAgICAgX3RoaXMubWVzc2FnZSA9IGVyci5yZXNwb25zZS5kYXRhLm1lc3NhZ2U7CiAgICAgICAgX3RoaXMuc3VjY2VzcyA9IGZhbHNlOwogICAgICAgIF90aGlzLmluZm9NZXNzYWdlID0gdHJ1ZTsKCiAgICAgICAgX3RoaXMucmV0cmlldmVUYXNrcygpOwoKICAgICAgICBfdGhpcy5kZWxldGVEaWFsb2cgPSBmYWxzZTsKICAgICAgfSk7CiAgICB9LAogICAgLy8gU2V0dXAgbWFwcGluZyBvZiB0YXNrcwogICAgZ2V0RGlzcGxheVRhc2s6IGZ1bmN0aW9uIGdldERpc3BsYXlUYXNrKHRhc2spIHsKICAgICAgcmV0dXJuIHsKICAgICAgICBpZDogdGFzay5pZCwKICAgICAgICBuYW1lOiB0YXNrLm5hbWUsCiAgICAgICAgbGFzdF9tb2Q6IHRhc2sudXBkYXRlZEF0CiAgICAgIH07CiAgICB9LAogICAgLy8gR2V0IHRhc2tzIGZyb20gZGF0YWJhc2UKICAgIHJldHJpZXZlVGFza3M6IGZ1bmN0aW9uIHJldHJpZXZlVGFza3MoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgdXNlckRhdGFTZXJ2aWNlLmdldFN0dWRlbnRBc3NpZ25tZW50cyh0aGlzLiRzdG9yZS5zdGF0ZS5hcHAudXNlcklEKS50aGVuKGZ1bmN0aW9uIChfcmVmKSB7CiAgICAgICAgdmFyIGRhdGEgPSBfcmVmLmRhdGE7CiAgICAgICAgY29uc29sZS5sb2coIkNPTlRFTlQ6ICIsIGRhdGEpOwogICAgICAgIF90aGlzMi5hc3NpZ25tZW50cyA9IGRhdGEuYXNzaWdubWVudHMubWFwKGZ1bmN0aW9uICh0ZXN0KSB7CiAgICAgICAgICByZXR1cm4gewogICAgICAgICAgICBpZDogdGVzdC5pZCwKICAgICAgICAgICAgbmFtZTogdGVzdC5uYW1lLAogICAgICAgICAgICBhc3NpZ25lZEJ5OiAiIi5jb25jYXQodGVzdC5hc3NpZ25lZEJ5Lm5hbWUsICIgICIpLmNvbmNhdCh0ZXN0LmFzc2lnbmVkQnkuc3VybmFtZSksCiAgICAgICAgICAgIHRpbWVMaW1pdDogdGVzdC50aW1lTGltaXQsCiAgICAgICAgICAgIHN0YXR1czogdGVzdC5zdGF0dXMsCiAgICAgICAgICAgIGNvbnRlbnQ6IHRlc3QuY29udGVudAogICAgICAgICAgfTsKICAgICAgICB9KTsKICAgICAgfSk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["yourAssignments.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <v-container \n        class=\"d-flex flex-column justify-start align-center mt-5 rounded-lg\">\n\n        <v-card elevation=\"0\" class=\"ml-0\">\n            <v-card-title class=\"d-flex flex-row justify-space-between align-center\">\n            <h3 class=\"t-t-color text-h5 pt-3 font-weight-medium\"> Your assignments </h3>\n            <v-spacer></v-spacer>\n            <v-spacer></v-spacer>\n            <v-spacer></v-spacer>\n            <v-text-field\n                v-model=\"search\"\n                append-icon=\"mdi-magnify\"\n                label=\"Search\"\n                single-line\n                hide-details\n            ></v-text-field>\n            </v-card-title>\n            \n            <v-data-table\n            :headers=\"headers\"\n            :items=\"assignments\"\n            :items-per-page=\"7\"\n            :search=\"search\"\n            width=\"80%\"\n        >\n             <template v-slot:item=\"row\">\n                <tr>\n                    <td>{{ row.item.name }}</td>\n                    <td>{{ row.item.assignedBy }}</td>\n                    <td>{{ row.item.timeLimit }} minutes </td>\n\n                    <td>\n                      <v-tooltip v-if=\"row.item.status == 'Handed Out'\" right>\n                        <template v-slot:activator=\"{ on, attrs }\">\n                          <v-btn v-bind=\"attrs\" v-on=\"on\" plain class=\"pa-1\" \n                          icon :ripple=\"false\" @click=\"startDialog = true; selectedTest = row.item\">\n                              <v-icon color=\"text\">\n                                  mdi-draw\n                              </v-icon>\n                          </v-btn>\n                        </template>\n                        <span> Start Test </span>\n                      </v-tooltip>\n                      <v-tooltip v-if=\"row.item.status == 'In Progress'\" right>\n                        <template v-slot:activator=\"{ on, attrs }\">\n                          <v-btn v-bind=\"attrs\" v-on=\"on\" plain class=\"pa-1\" \n                          icon :ripple=\"false\" @click=\"selectedTest = row.item; startTest(selectedTest.id)\">\n                              <v-icon color=\"primary\">\n                                  mdi-draw\n                              </v-icon>\n                          </v-btn>\n                        </template>\n                        <span> Continue Test </span>\n                      </v-tooltip>\n                      <v-tooltip v-if=\"row.item.status == 'Finished'\" right>\n                        <template v-slot:activator=\"{ on, attrs }\">\n                          <v-btn v-bind=\"attrs\" v-on=\"on\" plain class=\"pa-1\" \n                          icon :ripple=\"false\" @click=\"viewResults(row.item)\">\n                              <v-icon color=\"text\">\n                                  mdi-file-eye-outline\n                              </v-icon>\n                          </v-btn>\n                        </template>\n                        <span> View Result </span>\n                      </v-tooltip>\n                    </td>\n                </tr>\n            </template>\n\n        </v-data-table>\n\n        </v-card>\n\n        <v-dialog v-model=\"startDialog\" width=\"325\">\n            <v-card>\n                <v-card-title class=\"text-h5 lighten-2\"> Start task </v-card-title>\n\n                <v-card-text> You will have exactly \n                    <span class=\"font-weight-medium text-body-1\">\n                        {{ selectedTest.timeLimit }} minutes\n                    </span> \n                    to complete this test. Do not close the browser window during \n                    the test or you will lose your data and will need to start over. \n                </v-card-text>\n\n                <v-divider></v-divider>\n\n                <v-card-actions>\n                    <v-spacer></v-spacer>\n                    <v-btn color=\"black\" outlined text @click=\"startDialog = false\"> Cancel </v-btn>\n                    <v-btn color=\"primary\" @click=\"startTest(selectedTest.id)\"> Start </v-btn>\n                </v-card-actions>\n                \n            </v-card>\n        </v-dialog>\n\n        <v-dialog v-model=\"resultsDialog\" width=\"450\">\n            <v-card>\n                <v-card-title class=\"text-h5 lighten-2\"> Test results </v-card-title>\n\n                <v-card-text class=\"text-body-1\"> \n                    You overall score: {{ calculatedPercentage }} <br>\n                    Correct answers: {{ calculatedFraction }}\n                </v-card-text>\n\n                <v-divider></v-divider>\n\n                <v-card-actions>\n                    <v-spacer></v-spacer>\n                    <v-btn color=\"primary\" outlined text @click=\"resultsDialog = false\"> Close </v-btn>\n                </v-card-actions>\n                \n            </v-card>\n        </v-dialog>\n\n    </v-container>\n</template>\n\n<script>\nimport concreteTestDataService from '../services/concreteTestDataService';\n    import TaskDataService from \"../services/taskDataService\";\nimport userDataService from '../services/userDataService';\n\n    export default {\n        data() {\n            return { \n                selectedTest: {}, // Which test was selected to begin or view result of\n                startDialog: false, // Show 'Are you sure' dialog before starting test\n                resultsDialog: false,\n                calculatedFraction: '',\n                calculatedPercentage: '',\n                \n                search: \"\",\n                headers: [\n                    {text: \"Test name\", value: \"test_name\", width: \"45ch\"},\n                    {text: \"Assigned by\", value: \"assignedBy\", width: \"50ch\"},\n                    {text: \"Time limit\", value: \"time_limit\", width: \"25ch\"},\n                    {text: \"Action\", value: \"action\", align: \"center\", sortable: false, width: \"10ch\"},\n                ],\n                assignments: [ ]\n            };\n        },\n\n        computed: { },\n\n        created() { },\n\n        // This function runs before the UI loads\n        beforeMount() {\n            // Load tasks from the database\n            this.retrieveTasks();\n        },\n\n        methods: { \n            testResult() {\n                // If a test is selected\n                if( this.selectedTest ) {\n                    let answersTotal = 0;\n                    let correctAnswers = 0;\n                    for(let task of this.selectedTest.content) {\n                        for(let question of task.content.questions) {\n                            for(let answer of question.answers) {\n                                // Increment total answer count\n                                answersTotal = answersTotal + 1;\n\n                                // Check if answer is correct\n                                if(answer.correct[0] == answer.selected)\n                                    correctAnswers = correctAnswers + 1;\n                            }\n                        }\n                    }\n\n                    this.calculatedPercentage = (correctAnswers/answersTotal) * 100;\n                    this.calculatedFraction = `${correctAnswers}/${answersTotal}`;\n                }\n            },\n\n            startTest(id) {\n                this.$router.push({name: \"takeTest\", params: {id: id}})\n            },\n\n            viewResults(test) {\n                this.selectedTest = test;\n                this.testResult();\n                this.resultsDialog = true;\n            },\n\n            // delete selected task\n            showDeleteDialog(item) {\n                this.currentId = item.id;\n                this.deleteDialog = true;\n            },\n            deleteTask(id) {\n                TaskDataService.delete(id)\n                .then((res) => {\n                    this.message = res.data.message;\n                    this.success = true;\n                    this.infoMessage = true;\n                    this.retrieveTasks();\n                    this.deleteDialog = false;\n                })\n                .catch((err) => {\n                    this.message = err.response.data.message;\n                    this.success = false;\n                    this.infoMessage = true;\n                    this.retrieveTasks();\n                    this.deleteDialog = false;\n                })\n            },\n\n            // Setup mapping of tasks\n            getDisplayTask(task) {\n                return {\n                    id: task.id,\n                    name: task.name,\n                    last_mod: task.updatedAt\n                };\n            },\n            // Get tasks from database\n            retrieveTasks() {\n                userDataService.getStudentAssignments(this.$store.state.app.userID).then(({data}) => {    \n\n                    console.log(\"CONTENT: \", data);\n\n                    this.assignments = data.assignments.map((test) => {\n                        return {\n                            id: test.id,\n                            name: test.name,\n                            assignedBy: `${test.assignedBy.name}  ${test.assignedBy.surname}`,\n                            timeLimit: test.timeLimit,\n                            status: test.status,\n                            content: test.content\n                        }\n                    });\n                });\n            },\n        },\n    }\n</script>\n\n<style>\n    .b-g {\n        background-color: var(--green-background-color);\n        height: 90%;\n    }\n    .r-g {\n        height: 90%;\n    }\n    .h-g {\n        border: solid 2px hotpink;\n    }\n\n    [text-narrow] {\n        line-height: 1.1 !important;\n        font-size: 1rem;\n    }\n\n    .pointer {\n        cursor: pointer !important;\n    }\n</style>"],"sourceRoot":"src/components"}]}