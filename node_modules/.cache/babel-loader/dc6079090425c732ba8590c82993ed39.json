{"remainingRequest":"/home/dc/Documents/BP/vue-bp-web/node_modules/babel-loader/lib/index.js!/home/dc/Documents/BP/vue-bp-web/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/dc/Documents/BP/vue-bp-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dc/Documents/BP/vue-bp-web/src/components/yourtests.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dc/Documents/BP/vue-bp-web/src/components/yourtests.vue","mtime":1649987524154},{"path":"/home/dc/Documents/BP/vue-bp-web/babel.config.js","mtime":1646999302412},{"path":"/home/dc/Documents/BP/vue-bp-web/node_modules/cache-loader/dist/cjs.js","mtime":1642114936856},{"path":"/home/dc/Documents/BP/vue-bp-web/node_modules/babel-loader/lib/index.js","mtime":1642114938312},{"path":"/home/dc/Documents/BP/vue-bp-web/node_modules/cache-loader/dist/cjs.js","mtime":1642114936856},{"path":"/home/dc/Documents/BP/vue-bp-web/node_modules/vue-loader/lib/index.js","mtime":1642114938760}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["yourtests.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <v-container \n        class=\"d-flex flex-column justify-start align-center mt-5 rounded-lg\">\n\n        <v-card elevation=\"0\" class=\"ml-0\">\n            <v-card-title class=\"d-flex flex-row justify-space-between align-center\">\n            <h3 class=\"t-t-color text-h5 pt-3 font-weight-medium\"> Your tests </h3>\n            <v-spacer></v-spacer>\n            <v-spacer></v-spacer>\n            <v-spacer></v-spacer>\n            <v-text-field\n                label=\"Search\" append-icon=\"mdi-magnify\" \n                v-model=\"search\" single-line hide-details\n            ></v-text-field>\n            </v-card-title>\n            \n            <v-data-table\n                :headers=\"headers\" :items=\"tests\" :items-per-page=\"7\" :search=\"search\" width=\"80%\">\n                <template v-slot:item=\"row\">\n                    <tr>\n                        <td>{{ row.item.name }}</td>\n                        <td>{{ getHumanReadableTimestamp(row.item.last_mod) }}</td>\n\n                        <td class=\"px-12\">\n                        <v-btn plain class=\"pa-0\" :ripple=\"false\" @click.stop=\"openHandOutDialog(row.item)\">\n                            <v-icon class=\"pa-0 ma-0\" color=\"primary\">\n                                mdi-clipboard-arrow-up-outline\n                            </v-icon>\n                        </v-btn>\n                        </td>\n                        <td class=\"px-0\">\n                        <v-btn plain class=\"pa-1\" :ripple=\"false\" @click=\"modifyTest(row.item)\">\n                            <v-icon color=\"var(--main-text-color)\">\n                                mdi-pencil-outline\n                            </v-icon>\n                        </v-btn>\n                        </td>\n                        <td class=\"px-0\">\n                        <v-btn plain class=\"pa-0\" :ripple=\"false\" @click.stop=\"showDeleteDialog(row.item)\">\n                            <v-icon class=\"pa-0\" color=\"orange\">\n                                mdi-close-circle-outline\n                            </v-icon>\n                        </v-btn>\n                        </td>                        \n                    </tr>\n                </template>\n\n        </v-data-table>\n\n        </v-card>\n\n        <v-dialog v-model=\"deleteDialog\" width=\"325\">\n            <v-card>\n                <v-card-title class=\"text-h5 lighten-2\"> Delete task? </v-card-title>\n\n                <v-card-text>\n                    Are you sure you want to delete this task?\n                </v-card-text>\n\n                <v-divider></v-divider>\n\n                <v-card-actions>\n                <v-spacer></v-spacer>\n                <v-btn color=\"black\" text @click=\"deleteDialog = false\">\n                    Cancel\n                </v-btn>\n                <v-btn color=\"red\" text @click=\"deleteTest(selectedTestID)\">\n                    Delete\n                </v-btn>\n                </v-card-actions>\n            </v-card>\n        </v-dialog>\n\n        <v-dialog v-model=\"handoutDialog\" width=\"550\">\n            <v-card>\n                <v-card-title class=\"text-h5 lighten-2\"> Hand Out Test </v-card-title>\n\n                <v-card-text class=\"text-body-1 font-weight-medium\">\n                    Select students to assign the test to\n                </v-card-text>\n\n                <v-virtual-scroll :items=\"students\" :item-height=\"40\" height=\"350\">\n                    <template v-slot:default=\"{ item }\">\n                        <v-list-item class=\"px-5\">\n                            <v-list-item-avatar>\n                                <v-avatar color=\"primary\" size=\"32\" class=\"white--text\">\n                                {{ item.name[0] + item.surname[0] }}\n                                </v-avatar>\n                            </v-list-item-avatar>\n\n                            <v-list-item-content>\n                                <v-list-item-title>{{ item.name + \" \" + item.surname }}</v-list-item-title>\n                            </v-list-item-content>\n\n                            <v-list-item-action>\n                                <v-checkbox v-model=\"selectedStudents\" :value=\"item.id\"></v-checkbox>\n                            </v-list-item-action>\n                        </v-list-item>\n                    </template>\n                    </v-virtual-scroll>\n\n                <v-divider></v-divider>\n\n                <v-card-actions>\n                    <v-spacer></v-spacer>\n                    <v-btn text outlined @click=\"handoutDialog = false\">\n                        Cancel\n                    </v-btn>\n                    <v-btn :disabled=\"!selectedStudents.length\" color=\"primary\" @click=\"handoutTest()\">\n                        Hand out\n                    </v-btn>\n                </v-card-actions>\n            </v-card>\n        </v-dialog>\n\n    </v-container>\n</template>\n\n<script>\nimport { mapActions } from 'vuex';\nimport concreteTestDataService from '../services/concreteTestDataService';\nimport generatorService from \"../services/generatorService\";\nimport TestDataService from \"../services/testDataService\";\nimport userDataService from '../services/userDataService';\n\n    export default {\n        data() {\n            return {\n                selectedTestId: -1, // Which task was selected to modify or delete from the table\n\n                deleteDialog: false, // Show 'Are you sure' dialog for deletion\n                search: \"\",\n                headers: [\n                    {text: \"Test name\", value: \"name\", width: \"50ch\"},\n                    {text: \"Last Modified\", value: \"last_mod\", width: \"45ch\"},\n                    {text: \"Hand out\", value: \"delete\", align: \"center\", sortable: false, width: \"5ch\"},\n                    {text: \"Modify\", value: \"modify\", align: \"center\", sortable: false, width: \"1ch\" },\n                    {text: \"Delete\", value: \"delete\", align: \"center\", sortable: false, width: \"1ch\" },\n                ],\n\n                tests: [ ],\n\n                handoutDialog: false,\n                students: [],\n                selectedStudents: [],\n\n                loadStudents: false\n            };\n        },\n\n        beforeRouteEnter(to, from, next) {\n            next(() => {\n                console.log(from);\n            });\n        },\n\n        computed: { },\n\n        created() { },\n\n        // This function runs before the UI loads\n        beforeMount() {\n            // Load tasks from the database\n            this.retrieveTests();\n        },\n\n        methods: { \n\n            ...mapActions({\n                startTestModification: 'test/startTestModification'\n            }),\n\n            // Hand out test to students\n            async handoutTest() {\n\n                // Get selected AbstractTest\n                let abstractTest = await TestDataService.get(this.selectedTestID);\n\n                // Extract abstractTasks\n                let abstractTasks = abstractTest.data.tasks.map((task) => {\n                    return {\n                        content: task.content,\n                        renderOption: task.testTasks.renderOption\n                    }\n                });\n\n                // For each selected student\n                this.selectedStudents.forEach(async (student) => {\n\n                    // Generate ConcreteTasks from AbstractTasks\n                    let generated = await generatorService.generateMultiple({ abstractTasks });\n                    console.log('HERE IS THE CONCRETE TASKS', generated.data.concreteTasks);\n\n                    // Save expected answers\n                    let expectedAnswers = [];\n                    for(let concreteTask of generated.data.concreteTasks) {\n                        console.log(concreteTask.content.expectedAnswers);\n                        expectedAnswers = expectedAnswers.concat([...concreteTask.content.expectedAnswers]);\n                        delete concreteTask.content.expectedAnswers\n                    }\n                    \n\n                    // Create a new ConcreteTest\n                    concreteTestDataService.create({\n                        name: abstractTest.data.name,\n                        timeLimit: abstractTest.data.timeLimit,\n                        // tasks {content, renderOption}\n                        content: generated.data.concreteTasks,\n                        expectedAnswers: expectedAnswers,\n                        createdFrom: this.selectedTestID,\n                        assignedTo: student,\n                        assignedBy: this.$store.state.app.userID \n                    }).then(({data}) => {\n                        console.log(data);\n                        this.handoutDialog = false;\n                    }).catch((err) => {\n                        console.log(err.data.message);\n                    });\n\n                });\n            },\n\n            async openHandOutDialog(test) {\n                this.students = [];\n                this.selectedStudents = [];\n\n                // Get all users and filter students\n                userDataService.getAll().then(({data}) => {\n                    this.students = data.filter(({type}) => type == \"student\").map((student) => {\n                        return {\n                            id: student.id,\n                            name: student.name,\n                            surname: student.surname,\n                        }\n                    });\n                    this.handoutDialog = true;\n                });\n\n                // Save hand out testID\n                this.selectedTestID = test.id;\n\n                console.log(this.$store.state.app.userID);\n                console.log(this.selectedTestID);\n            },\n\n            // Modify selected task in next window\n            modifyTest(item) {\n                // Pass id paramter to the router\n                this.startTestModification({testId: item.id});\n                this.$router.push({name: \"createTest\", params: {testId: item.id}});\n            },\n            \n            // Show delete dialog\n            showDeleteDialog(item) {\n                this.selectedTestID = item.id;\n                this.deleteDialog = true;\n            },\n\n            // Delete selected task\n            deleteTest(id) {\n                TestDataService.delete(id)\n                .then((res) => {\n                    this.retrieveTests();\n                    this.$store.dispatch('showMessage', {message: res.data.message});\n                    this.deleteDialog = false;\n                })\n                .catch((err) => {\n                    this.retrieveTests();\n                    this.$store.dispatch('showMessage', {message: err.response.data.message, success: false});\n                    this.deleteDialog = false;\n                })\n            },\n\n            // Setup mapping of tasks\n            getDisplayTest(test) {\n                return {\n                    id: test.id,\n                    name: test.name,\n                    last_mod: test.updatedAt\n                };\n            },\n            // Get tasks from database\n            retrieveTests() {\n              TestDataService.getAll()\n                .then((response) => {\n                  this.tests = response.data.map(this.getDisplayTest);\n                  console.log(response.data);\n                })\n                .catch((e) => {\n                  console.log(e);\n                });\n            },\n        },\n    }\n</script>\n\n<style>\n    .b-g {\n        background-color: var(--green-background-color);\n        height: 90%;\n    }\n    .r-g {\n        height: 90%;\n    }\n    .h-g {\n        border: solid 2px hotpink;\n    }\n\n    [text-narrow] {\n        line-height: 1.1 !important;\n        font-size: 1rem;\n    }\n\n    .pointer {\n        cursor: pointer !important;\n    }\n</style>"],"sourceRoot":"src/components"}]}